[
  {
    "objectID": "analisis_datos_covid.html",
    "href": "analisis_datos_covid.html",
    "title": "Análisis de datos de COVID-19",
    "section": "",
    "text": "Input inicial Base de datos csv pública de casos de COVID-19 en Argentina.\nObjetivo Obtener una base de datos limplia y lista de usar en GeoCovid app: - Cada observación debe tener una fecha de contagio/enfermedad.\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'arrow'\n\n\nThe following object is masked from 'package:lubridate':\n\n    duration\n\n\nThe following object is masked from 'package:utils':\n\n    timestamp\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:arrow':\n\n    schema\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout"
  },
  {
    "objectID": "analisis_datos_covid.html#carga-de-los-datos-y-análisis-inicial",
    "href": "analisis_datos_covid.html#carga-de-los-datos-y-análisis-inicial",
    "title": "Análisis de datos de COVID-19",
    "section": "Carga de los datos y análisis inicial",
    "text": "Carga de los datos y análisis inicial\n\n# Leo el archivo como csv. Esta en Dropbox ya que es bastante grande.\ncovid_data &lt;- arrow::open_dataset(\"/Users/florenciadandrea/Dropbox/data_geocovid/Covid19Casos.csv\", \n                           format = 'csv')\n\n# Elijo que datos voy a descargar usando dplyr. \n# Los datos no se bajan hasta que uso collect()\n\ncovid_casos_muestra &lt;- covid_data |&gt; \n  filter(clasificacion_resumen != 'Descartado',\n         carga_provincia_nombre %in% c('CABA', 'Buenos Aires') | residencia_provincia_nombre %in% c('CABA', 'Buenos Aires')) |&gt;\n  select(id_evento_caso,\n          edad, edad_años_meses, sexo,\n          carga_provincia_nombre,\n          residencia_pais_nombre, residencia_provincia_nombre, residencia_departamento_nombre,\n          fecha_inicio_sintomas, fecha_diagnostico, fecha_internacion, fecha_cui_intensivo, fecha_fallecimiento,\n          clasificacion, clasificacion_resumen) |&gt; \n  collect()\n\n# Los guardo en formato parquet para reducir el tamaño\n# write_parquet(covid_casos_muestra, \"../data/covid_casos/covid_casos_baires.parquet\")\n\nComposición del dataset:\n\ncovid_casos_muestra &lt;- read_parquet(\"data/inicial/covid_casos_baires.parquet\")\nstr(covid_casos_muestra)\n\ntibble [5,245,880 × 15] (S3: tbl_df/tbl/data.frame)\n $ id_evento_caso                : int [1:5245880] 10000049 10000055 10000057 1000006 10000066 10000076 10000079 10000084 10000087 10000093 ...\n $ edad                          : int [1:5245880] 74 43 36 30 44 46 55 47 45 48 ...\n $ edad_años_meses               : chr [1:5245880] \"Años\" \"Años\" \"Años\" \"Años\" ...\n $ sexo                          : chr [1:5245880] \"F\" \"F\" \"M\" \"M\" ...\n $ carga_provincia_nombre        : chr [1:5245880] \"CABA\" \"CABA\" \"Buenos Aires\" \"Buenos Aires\" ...\n $ residencia_pais_nombre        : chr [1:5245880] \"Argentina\" \"Argentina\" \"Argentina\" \"Argentina\" ...\n $ residencia_provincia_nombre   : chr [1:5245880] \"CABA\" \"CABA\" \"Buenos Aires\" \"Buenos Aires\" ...\n $ residencia_departamento_nombre: chr [1:5245880] \"COMUNA 09\" \"COMUNA 09\" \"Mercedes\" \"Malvinas Argentinas\" ...\n $ fecha_inicio_sintomas         : Date[1:5245880], format: NA NA ...\n $ fecha_diagnostico             : Date[1:5245880], format: \"2021-04-10\" \"2021-04-14\" ...\n $ fecha_internacion             : Date[1:5245880], format: NA NA ...\n $ fecha_cui_intensivo           : Date[1:5245880], format: NA NA ...\n $ fecha_fallecimiento           : Date[1:5245880], format: NA NA ...\n $ clasificacion                 : chr [1:5245880] \"Caso confirmado por laboratorio - No activo (por tiempo de evolución)\" \"Caso confirmado por laboratorio - No activo (por tiempo de evolución)\" \"Caso confirmado por laboratorio - No activo (por tiempo de evolución)\" \"Caso sospechoso - No Activo - Con muestra sin resultado concluyente\" ...\n $ clasificacion_resumen         : chr [1:5245880] \"Confirmado\" \"Confirmado\" \"Confirmado\" \"Sospechoso\" ...\n\n\nEn total, el dataset presenta información para 5245861 casos diferentes. Las variables disponibles se encuentran descriptas en Tabla 1 de acuerdo a la información obtenida desde fuentes oficiales. De ellas fueron elegidas un porcentaje.\nEsto va a aplicar a ambos subdatasets.\n\n\nTabla 1: Variables provistas en el dataset de la Dirección Nacional de Epidemiología y Análisis de Situación de Salud\n\n\n\n\n\n\n\nTitulo de la columna\nTipo de dato\nDescripción\n\n\n\n\nid_evento_caso\nNúmero entero (integer)\nNumero de caso\n\n\nsexo\nTexto (string)\nSexo\n\n\nedad\nNúmero entero (integer)\nEdad\n\n\nedad_años_meses\nTexto (string)\nEdad indicada en meses o años\n\n\nresidencia_pais_nombre\nTexto (string)\nPaís de residencia\n\n\nresidencia_provincia_nombre\nTexto (string)\nProvincia de residencia\n\n\nresidencia_departamento_nombre\nTexto (string)\nDepartamento de residencia\n\n\ncarga_provincia_nombre\nTexto (string)\nProvincia de establecimiento de carga\n\n\nfecha_inicio_sintomas\nFecha ISO-8601 (date)\nFecha de inicio de síntomas\n\n\nfecha_apertura\nFecha ISO-8601 (date)\nFecha de apertura del caso\n\n\nsepi_apertura\nNúmero entero (integer)\nSemana Epidemiológica de fecha de apertura\n\n\nfecha_internacion\nFecha ISO-8601 (date)\nFecha de internación\n\n\ncuidado_intensivo\nFecha ISO-8601 (date)\nFecha de ingreso a cuidado intensivo en el caso de corresponder\n\n\nfallecido\nTexto (string)\nIndicación de fallecido\n\n\nfecha_fallecimiento\nFecha ISO-8601 (date)\nFecha de fallecimiento\n\n\nasistencia_respiratoria_mecanica\nTexto (string)\nIndicación si requirió asistencia respiratoria mecánica\n\n\ncarga_provincia_id\nNúmero entero (integer)\nCódigo de Provincia de carga\n\n\norigen_financiamiento\nTexto (string)\nOrigen de financiamiento\n\n\nclasificacion\nTexto (string)\nClasificación manual del registro\n\n\nclasificacion_resumen\nTexto (string)\nClasificación del caso\n\n\nresidencia_provincia_id\nNúmero entero (integer)\nCódigo de Provincia de residencia\n\n\nfecha_diagnostico\nTiempo ISO-8601 (time)\nFecha de diagnóstico\n\n\nresidencia_departamento_id\nNúmero entero (integer)\nCódigo de Departamento de residencia\n\n\nultima_actualizacion\nFecha ISO-8601 (date)\nÚltima actualización\n\n\n\n\nDatos faltantes\nfecha_apertura (variable descartada) es la unica variable que reporta una fecha para todas las observaciones. fecha_diagnostico y fecha_inicio_sintomas NO PRESENTAN datos para todas las observaciones.\n\nsummary(covid_casos_muestra)\n\n id_evento_caso          edad         edad_años_meses        sexo          \n Min.   :  733774   Min.   : -84.00   Length:5245880     Length:5245880    \n 1st Qu.: 8678407   1st Qu.:  27.00   Class :character   Class :character  \n Median :16534314   Median :  38.00   Mode  :character   Mode  :character  \n Mean   :17505517   Mean   :  39.63                                        \n 3rd Qu.:27367564   3rd Qu.:  51.00                                        \n Max.   :33222629   Max.   :2023.00                                        \n                    NA's   :1424                                           \n carga_provincia_nombre residencia_pais_nombre residencia_provincia_nombre\n Length:5245880         Length:5245880         Length:5245880             \n Class :character       Class :character       Class :character           \n Mode  :character       Mode  :character       Mode  :character           \n                                                                          \n                                                                          \n                                                                          \n                                                                          \n residencia_departamento_nombre fecha_inicio_sintomas fecha_diagnostico   \n Length:5245880                 Min.   :2020-01-01    Min.   :1202-01-07  \n Class :character               1st Qu.:2020-12-05    1st Qu.:2021-03-20  \n Mode  :character               Median :2021-05-05    Median :2021-07-19  \n                                Mean   :2021-05-13    Mean   :2021-07-22  \n                                3rd Qu.:2021-12-28    3rd Qu.:2022-01-13  \n                                Max.   :2022-06-04    Max.   :2022-06-04  \n                                NA's   :2720185       NA's   :825927      \n fecha_internacion    fecha_cui_intensivo  fecha_fallecimiento \n Min.   :2020-01-01   Min.   :2020-03-04   Min.   :2020-03-07  \n 1st Qu.:2020-08-08   1st Qu.:2020-08-31   1st Qu.:2020-09-30  \n Median :2020-12-28   Median :2021-02-15   Median :2021-04-06  \n Mean   :2021-01-18   Mean   :2021-02-05   Mean   :2021-03-04  \n 3rd Qu.:2021-05-24   3rd Qu.:2021-05-27   3rd Qu.:2021-06-10  \n Max.   :2022-06-04   Max.   :2022-06-04   Max.   :2022-06-04  \n NA's   :5103454      NA's   :5221684      NA's   :5169727     \n clasificacion      clasificacion_resumen\n Length:5245880     Length:5245880       \n Class :character   Class :character     \n Mode  :character   Mode  :character     \n                                         \n                                         \n                                         \n                                         \n\n\n\nTotal de casos de cada clasificación para CABA y Buenos Aires\nLa provincia de Buenos Aires tiene un mayor número de casos reportados en total para el período estudiado.\n\n covid_casos_muestra |&gt; \n  filter(carga_provincia_nombre %in% c('CABA', 'Buenos Aires')) |&gt; # este filtro tiene sentido porque considere los casos de residentes en caba y baires que fueron cargados en otras provincias tambien\n  select(-1) |&gt; \n  count(carga_provincia_nombre, clasificacion_resumen) |&gt; \n  ggplot() +\n  geom_col(aes(x = carga_provincia_nombre,\n               y = n,\n               fill = clasificacion_resumen)) +\n  scale_fill_viridis_d(option = \"C\") +\n  theme_minimal() +\n    ylab('Cantidad de observaciones') +\n    xlab('carga_provincia_nombre')\n\n\n\n\n\n\nDistribución de NAs en las distintas fechas reportadas\nDebido a que la información de movilidad ciudadana se encuentra reportada por día es importante poder obtener una fecha asociada a cada observación.\n\nfecha_diagnostico y fecha_inicio_sintomas son las variables con mayor número de observaciones y las más relevantes a nivel epidemiológico.\nfecha_cui_intensivo presenta menor cantidad de observaciones que fecha_fallecido. Esto podria ser por falta de datos o por muertes que se dieron sin llegar a internacion.\n\n\nobs_fechas &lt;- covid_casos_muestra |&gt; \n  select(starts_with('fecha_')) |&gt; \n  pivot_longer(1:5,\n               names_to = 'names',\n               values_to = 'values'\n                ) |&gt; \n  group_by(names) |&gt; \n  summarize(n = sum(!is.na(values))) \n\n\n  ggplot(obs_fechas) +\n  geom_col(aes(x = fct_reorder(names, n),\n           y = n),\n           fill = viridis::magma(3)[2]) +\n    theme_minimal() +\n    coord_flip() +\n    xlab('Variables') +\n    ylab('Datos presentes en la base de datos')\n\n\n\n\nCantidad de casos de COVID-19 reportados"
  },
  {
    "objectID": "analisis_datos_covid.html#análisis-de-fecha_inicio_sintomas-y-fecha_diagnostico",
    "href": "analisis_datos_covid.html#análisis-de-fecha_inicio_sintomas-y-fecha_diagnostico",
    "title": "Análisis de datos de COVID-19",
    "section": "Análisis de fecha_inicio_sintomas y fecha_diagnostico",
    "text": "Análisis de fecha_inicio_sintomas y fecha_diagnostico\n\ncase_both_na &lt;- sum(is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico))\n\ncase_sintomas_na &lt;- sum(is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) \n\ncase_diagnostico_na &lt;- sum(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) \n\ncase_both_filled &lt;- sum(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico))\n\n# Create a table with the counts\ntable_data &lt;- data.frame(casos = c(\"ambas_columnas_na\", \"fecha_inicio_sintomas_na\", \n                                   \"fecha_diagnostico_na\",\"ambas_columnas_completas\"),\n                         obs = c(case_both_na, case_sintomas_na,\n                                   case_diagnostico_na, case_both_filled)\n) |&gt; \n  mutate(porcentaje = round((100*obs)/nrow(covid_casos_muestra), digit = 1))\n\n\n\n# chequeo que la cantidad de valores reportados en la tabla\n# equivale al total de observaciones\nif(sum(table_data$obs) == nrow(covid_casos_muestra)){\n  \n  kable(table_data)\n}\n\n\n\n\ncasos\nobs\nporcentaje\n\n\n\n\nambas_columnas_na\n284549\n5.4\n\n\nfecha_inicio_sintomas_na\n2435636\n46.4\n\n\nfecha_diagnostico_na\n541378\n10.3\n\n\nambas_columnas_completas\n1984317\n37.8\n\n\n\n\n\n\nCASO 1: fecha de inicio de sintomas y fecha de diagnostico no reportadas\nEsto es el 5.4 % del total de la base de datos.\nLa mayoría de estos casos son sospechosos, posibles falsos negativos.\n\ncovid_casos_muestra |&gt; \n  filter(is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) |&gt; \n  select(clasificacion, clasificacion_resumen) |&gt; \n  group_by(clasificacion_resumen, clasificacion) |&gt; \n  summarize(obs = n()) |&gt; \n  arrange(desc(obs)) |&gt; \n  head() |&gt; \n  kable()\n\n`summarise()` has grouped output by 'clasificacion_resumen'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\n\n\n\n\nclasificacion_resumen\nclasificacion\nobs\n\n\n\n\nSospechoso\nCaso sospechoso - No Activo - Con muestra sin resultado concluyente\n106623\n\n\nConfirmado\nCaso confirmado por criterio clínico-epidemiológico - No activo (por tiempo de evolución)\n77031\n\n\nSospechoso\nCaso sospechoso - No Activo - Sin muestra\n61349\n\n\nProbable\nCaso probable por Autotest - No Activo (por tiempo de evolución)\n23485\n\n\nProbable\nCaso probable por Autotest - Activo\n7336\n\n\nSospechoso\nCaso sospechoso - Activo Internado - Con muestra sin resultado concluyente\n2061\n\n\n\nClasificación de los casos donde fecha_inicio_sintomas y fecha_diagnostico fueron no reportadas\n\n\n\n\nCASO 2: fecha de inicio de sintomas reportada y fecha de diagnostico ausente\nEsto es el 46.4 % del total de la base de datos.\nLa mayoría de estas observaciones representan pacientes con casos confirmados por laboratorio.\n\ncovid_casos_muestra |&gt; \n  filter(is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) |&gt; \n  select(clasificacion, clasificacion_resumen) |&gt; \n  group_by(clasificacion_resumen, clasificacion) |&gt; \n  summarize(obs = n()) |&gt; \n  arrange(desc(obs)) |&gt;\n  head() |&gt; \n  kable()\n\n`summarise()` has grouped output by 'clasificacion_resumen'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\n\n\n\n\nclasificacion_resumen\nclasificacion\nobs\n\n\n\n\nConfirmado\nCaso confirmado por laboratorio - No activo (por tiempo de evolución)\n2342696\n\n\nConfirmado\nCaso confirmado por laboratorio - No Activo por criterio de laboratorio\n45219\n\n\nConfirmado\nCaso confirmado por laboratorio - Activo\n27943\n\n\nConfirmado\nCaso confirmado por criterio clínico-epidemiológico - No activo (por tiempo de evolución)\n8837\n\n\nConfirmado\nCaso confirmado por laboratorio - Fallecido\n7814\n\n\nSospechoso\nCaso con resultado negativo-no conclusivo - Activo\n2097\n\n\n\nClasificación de los casos donde solo fecha_inicio_sintomas fue reportada.\n\n\n\n\nCASO 3: fecha de inicio de sintomas ausente y fecha de diagnostico reportada\nEsto es el % del total de la base de datos.\nEn este caso, en su mayoria son los casos que fueron confirmados por criterio clínico-epidemiologico.\n\ncovid_casos_muestra |&gt; \n  filter(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) |&gt; \n  select(clasificacion, clasificacion_resumen) |&gt; \n  group_by(clasificacion_resumen, clasificacion) |&gt; \n  summarize(obs = n()) |&gt; \n  arrange(desc(obs)) |&gt; \n  head() |&gt; \n  kable()\n\n`summarise()` has grouped output by 'clasificacion_resumen'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\n\n\n\n\nclasificacion_resumen\nclasificacion\nobs\n\n\n\n\nConfirmado\nCaso confirmado por criterio clínico-epidemiológico - No activo (por tiempo de evolución)\n268559\n\n\nSospechoso\nCaso sospechoso - No Activo - Sin muestra\n130728\n\n\nSospechoso\nCaso sospechoso - No Activo - Con muestra sin resultado concluyente\n109266\n\n\nSospechoso\nCaso sospechoso - Activo Internado - Sin muestra\n11534\n\n\nSospechoso\nCaso sospechoso - Activo Internado - Con muestra sin resultado concluyente\n10104\n\n\nConfirmado\nCaso confirmado por criterio clínico - epidemiológico - Activo internado\n3803\n\n\n\nClasificación de los casos donde solo fecha_diagnostico fue reportada.\n\n\n\n\nCASO 4: fecha de inicio de sintomas y fecha de diagnostico reportadas\nEsto es el 37.8 % del total de la base de datos.\nEn este caso, en su mayoría son los casos que fueron confirmados por laboratorio.\n\ncovid_casos_muestra |&gt; \n  filter(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) |&gt; \n  select(clasificacion, clasificacion_resumen) |&gt; \n  group_by(clasificacion_resumen, clasificacion) |&gt; \n  summarize(obs = n()) |&gt; \n  arrange(desc(obs)) |&gt; \n  head() |&gt; \n  kable()\n\n`summarise()` has grouped output by 'clasificacion_resumen'. You can override\nusing the `.groups` argument.\n\n\n\n\n\n\n\n\n\n\nclasificacion_resumen\nclasificacion\nobs\n\n\n\n\nConfirmado\nCaso confirmado por laboratorio - No activo (por tiempo de evolución)\n1825253\n\n\nConfirmado\nCaso confirmado por laboratorio - Fallecido\n64442\n\n\nConfirmado\nCaso confirmado por laboratorio - No Activo por criterio de laboratorio\n50849\n\n\nConfirmado\nCaso confirmado por criterio clínico-epidemiológico - No activo (por tiempo de evolución)\n35131\n\n\nConfirmado\nCaso confirmado por laboratorio - Activo\n4687\n\n\nSospechoso\nCaso con resultado negativo-no conclusivo - Activo\n1054\n\n\n\nClasificación de los casos donde fecha_inicio_sintomas y fecha_diagnostico fueron reportadas.\n\n\n\nDiferencia de días entre fecha_inicio_sintomas y fecha_diagnostico\n\ndif_dias_total_casos &lt;- covid_casos_muestra |&gt; \n  dplyr::filter(carga_provincia_nombre %in% c('CABA', 'Buenos Aires')) |&gt; \n  mutate(dias_caso = as.numeric(difftime(fecha_diagnostico, # time1\n                                         fecha_inicio_sintomas, # time2\n                                         units=\"days\"))) # logica: time1 - time2\n\ndif_dias &lt;- dif_dias_total_casos |&gt; \n   dplyr::filter(!is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico))  # CASO 4\n\ndif_dias\n\n# A tibble: 1,973,695 × 16\n   id_evento_caso  edad edad_años_meses sexo  carga_provincia_nombre\n            &lt;int&gt; &lt;int&gt; &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt;                 \n 1       10000079    55 Años            M     Buenos Aires          \n 2       10000084    47 Años            M     Buenos Aires          \n 3       10000087    45 Años            F     Buenos Aires          \n 4       10000093    48 Años            M     Buenos Aires          \n 5       10000099    54 Años            F     Buenos Aires          \n 6        1000012    48 Años            M     CABA                  \n 7       10000143    50 Años            M     Buenos Aires          \n 8        1000015    31 Años            F     Buenos Aires          \n 9       10000157    25 Años            M     Buenos Aires          \n10       10000187    32 Años            M     Buenos Aires          \n# ℹ 1,973,685 more rows\n# ℹ 11 more variables: residencia_pais_nombre &lt;chr&gt;,\n#   residencia_provincia_nombre &lt;chr&gt;, residencia_departamento_nombre &lt;chr&gt;,\n#   fecha_inicio_sintomas &lt;date&gt;, fecha_diagnostico &lt;date&gt;,\n#   fecha_internacion &lt;date&gt;, fecha_cui_intensivo &lt;date&gt;,\n#   fecha_fallecimiento &lt;date&gt;, clasificacion &lt;chr&gt;,\n#   clasificacion_resumen &lt;chr&gt;, dias_caso &lt;dbl&gt;\n\n\nLos casos tienen un rango que va del positivo al negativo.\n\nrange(dif_dias$dias_caso)\n\n[1] -7304   828\n\n\nSi grafico, observo que la gran mayoria de los casos cae entre 0 a 10 dias.\n\nggplotly(\ndif_dias |&gt; \n  filter(dias_caso &lt; 30, dias_caso &gt; -7) |&gt; \n  group_by(dias_caso, carga_provincia_nombre) |&gt; \n  count() |&gt; \n  ggplot(aes(x = dias_caso,\n             y = n,\n             fill = carga_provincia_nombre)) +\n  geom_col() +\n  scale_fill_viridis_d()+\n  theme_minimal() +\n  ylab('Cantidad de observaciones') +\n  xlab('Diferencia entre fecha_inicio_sintomas y fecha_diagnostico')\n\n)\n\n\n\nPeríodo entre fecha_inicio_sintomas y fecha_diagnostico reportado para Buenos Aires y CABA, en los casos donde ambos valores fueron reportados"
  },
  {
    "objectID": "analisis_datos_covid.html#base-de-datos-final",
    "href": "analisis_datos_covid.html#base-de-datos-final",
    "title": "Análisis de datos de COVID-19",
    "section": "Base de datos final",
    "text": "Base de datos final\n\nDebido a que los datos de movilidad ciudadana solo son para el año 2020, se limita la base a ese periodo.\nConsiderando los casos descriptos anteriormente se tomaran las decisiones resumidas Tabla 2 para la creación de una nueva variable fecha_enfermo:\n\n\n\nTabla 2: Desiciones para la creación de la variable fecha_enfermo\n\n\n\n\n\n\n\nCaso\nDescripcion\nfecha_enfermo\n\n\n\n\n1\nfecha_inicio_sintomas y fecha_diagnostico no reportadas\nRemover casos\n\n\n2\nfecha_inicio_sintomas reportada y fecha_diagnostico ausente\nSe considera fecha_diagnostico\n\n\n3\nfecha_inicio_sintomas ausente y fecha_diagnostico reportada\nSe considera fecha_inicio_sintomas\n\n\n4\nfecha_inicio_sintomas y fecha_diagnostico reportadas\nSe conserva fecha_inicio_sintoma\n\n\n\n\n\nPara el caso 4, se eliminaron tambien los casos donde la diferencia entre fecha_inicio_sintomas y fecha_diagnostico era mayor a 30 o menor a -7.\n\n\n# periodo de analisis\ncovid_inicio &lt;- ymd(\"2020-03-01\")\ncovid_final &lt;- ymd(\"2022-03-31\")\n\nperiodo &lt;- function(x) {\n  covid_inicio &lt;= x & covid_final &gt;= x\n}\n\ncovid_casos_muestra &lt;-  covid_casos_muestra |&gt; \n  filter(if_all(starts_with('fecha_'),\n               ~ is.na(.x) | covid_inicio &lt;= .x & covid_final &gt;= .x))     \n\nbase_covid_completa &lt;- dif_dias_total_casos |&gt; \n                          # elimino casos donde la diferencia de dias entre \n                          # fecha de sintomas y diagnostico es muy extrema\n                          filter(dias_caso &lt; 30,\n                                 dias_caso &gt; -7) |&gt; \n                          mutate(fecha_enfermo = case_when(\n                            # CASO 1\n                              !is.na(fecha_inicio_sintomas) &\n                              !is.na(fecha_diagnostico) ~ as.character(fecha_inicio_sintomas),\n                            # CASO 2\n                              is.na(fecha_inicio_sintomas) & \n                              !is.na(fecha_diagnostico) ~ as.character(fecha_diagnostico),\n                            # CASO 3\n                              !is.na(fecha_inicio_sintomas) &\n                              is.na(fecha_diagnostico) ~ as.character(fecha_inicio_sintomas),\n                            # CASO 4\n                              is.na(fecha_inicio_sintomas) &\n                              is.na(fecha_diagnostico) ~ NA_character_)) |&gt; \n                              filter(fecha_enfermo &lt;= as.Date('2020-12-31'),\n                                     fecha_enfermo &gt;= as.Date('2020-03-01')) \n\n\nbase_covid_completa &lt;- base_covid_completa |&gt; \n                          drop_na(fecha_enfermo) # remuevo el caso 1\n\nhead(base_covid_completa)\n\n# A tibble: 6 × 17\n  id_evento_caso  edad edad_años_meses sexo  carga_provincia_nombre\n           &lt;int&gt; &lt;int&gt; &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt;                 \n1        1000012    48 Años            M     CABA                  \n2        1000015    31 Años            F     Buenos Aires          \n3        1000024    63 Años            M     CABA                  \n4        1000025    23 Años            M     Buenos Aires          \n5        1000037    77 Años            F     CABA                  \n6        1000052    31 Años            F     Buenos Aires          \n# ℹ 12 more variables: residencia_pais_nombre &lt;chr&gt;,\n#   residencia_provincia_nombre &lt;chr&gt;, residencia_departamento_nombre &lt;chr&gt;,\n#   fecha_inicio_sintomas &lt;date&gt;, fecha_diagnostico &lt;date&gt;,\n#   fecha_internacion &lt;date&gt;, fecha_cui_intensivo &lt;date&gt;,\n#   fecha_fallecimiento &lt;date&gt;, clasificacion &lt;chr&gt;,\n#   clasificacion_resumen &lt;chr&gt;, dias_caso &lt;dbl&gt;, fecha_enfermo &lt;chr&gt;\n\n# guardo la base\nwrite_parquet(base_covid_completa, \"data/procesada/covid_casos_baires_geocovid.parquet\")"
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html",
    "href": "CODIGO_DE_CONDUCTA.html",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "En el interés de fomentar una comunidad abierta y acogedora, nosotros como contribuyentes y administradores nos comprometemos a hacer de la participación en nuestro proyecto y nuestra comunidad una experiencia libre de acoso para todos, independientemente de la edad, dimensión corporal, discapacidad, etnia, identidad y expresión de género, nivel de experiencia, nacionalidad, apariencia física, raza, religión, identidad u orientación sexual.\n\n\n\nEjemplos de comportamiento que contribuyen a crear un ambiente positivo:\n\nUso de lenguaje amable e inclusivo\nRespeto a diferentes puntos de vista y experiencias\nAceptación de críticas constructivas\nEnfocarse en lo que es mejor para la comunidad\nMostrar empatía a otros miembros de la comunidad\n\n\n\n\n\nUso de lenguaje o imágenes sexuales y atención sexual no deseada\nComentarios insultantes o despectivos (trolling) y ataques personales o políticos\nAcoso público o privado\nPublicación de información privada de terceros sin su consentimiento, como direcciones físicas o electrónicas\nOtros tipos de conducta que pudieran considerarse inapropiadas en un entorno profesional.\n\n\n\n\nLos administradores del proyecto son responsables de clarificar los estándares de comportamiento aceptable y se espera que tomen medidas correctivas y apropiadas en respuesta a situaciones de conducta inaceptable. Los administradores del proyecto tienen el derecho y la responsabilidad de eliminar, editar o rechazar comentarios, commits, código, ediciones de documentación, issues, y otras contribuciones que no estén alineadas con este Código de Conducta, o de prohibir temporal o permanentemente a cualquier colaborador cuyo comportamiento sea inapropiado, amenazante, ofensivo o perjudicial.\n\n\n\nEste código de conducta aplica tanto a espacios del proyecto como a espacios públicos donde un individuo esté en representación del proyecto o comunidad. Ejemplos de esto incluye el uso de la cuenta oficial de correo electrónico, publicaciones a través de las redes sociales oficiales, o presentaciones con personas designadas en eventos online u offline. La representación del proyecto puede ser clarificada explicitamente por los administradores del proyecto.\n\n\n\nEjemplos de abuso, acoso u otro tipo de comportamiento inaceptable puede ser reportado al equipo del proyecto en florencia.dandrea@gmail.com. Todas las quejas serán revisadas e investigadas, generando un resultado apropiado a las circunstancias. El equipo del proyecto está obligado a mantener confidencialidad de la persona que reportó el incidente. Detalles específicos acerca de las políticas de aplicación pueden ser publicadas por separado. Administradores que no sigan o que no hagan cumplir este Código de Conducta pueden ser eliminados de forma temporal o permanente del equipo administrador.\n\n\n\nEste Código de Conducta es una adaptación del Contributor Covenant, versión 1.4, disponible en https://www.contributor-covenant.org/es/version/1/4/code-of-conduct.html"
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#nuestro-compromiso",
    "href": "CODIGO_DE_CONDUCTA.html#nuestro-compromiso",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "En el interés de fomentar una comunidad abierta y acogedora, nosotros como contribuyentes y administradores nos comprometemos a hacer de la participación en nuestro proyecto y nuestra comunidad una experiencia libre de acoso para todos, independientemente de la edad, dimensión corporal, discapacidad, etnia, identidad y expresión de género, nivel de experiencia, nacionalidad, apariencia física, raza, religión, identidad u orientación sexual."
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#nuestros-estándares",
    "href": "CODIGO_DE_CONDUCTA.html#nuestros-estándares",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "Ejemplos de comportamiento que contribuyen a crear un ambiente positivo:\n\nUso de lenguaje amable e inclusivo\nRespeto a diferentes puntos de vista y experiencias\nAceptación de críticas constructivas\nEnfocarse en lo que es mejor para la comunidad\nMostrar empatía a otros miembros de la comunidad"
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#ejemplos-de-comportamiento-inaceptable-por-participantes",
    "href": "CODIGO_DE_CONDUCTA.html#ejemplos-de-comportamiento-inaceptable-por-participantes",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "Uso de lenguaje o imágenes sexuales y atención sexual no deseada\nComentarios insultantes o despectivos (trolling) y ataques personales o políticos\nAcoso público o privado\nPublicación de información privada de terceros sin su consentimiento, como direcciones físicas o electrónicas\nOtros tipos de conducta que pudieran considerarse inapropiadas en un entorno profesional."
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#nuestras-responsabilidades",
    "href": "CODIGO_DE_CONDUCTA.html#nuestras-responsabilidades",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "Los administradores del proyecto son responsables de clarificar los estándares de comportamiento aceptable y se espera que tomen medidas correctivas y apropiadas en respuesta a situaciones de conducta inaceptable. Los administradores del proyecto tienen el derecho y la responsabilidad de eliminar, editar o rechazar comentarios, commits, código, ediciones de documentación, issues, y otras contribuciones que no estén alineadas con este Código de Conducta, o de prohibir temporal o permanentemente a cualquier colaborador cuyo comportamiento sea inapropiado, amenazante, ofensivo o perjudicial."
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#alcance",
    "href": "CODIGO_DE_CONDUCTA.html#alcance",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "Este código de conducta aplica tanto a espacios del proyecto como a espacios públicos donde un individuo esté en representación del proyecto o comunidad. Ejemplos de esto incluye el uso de la cuenta oficial de correo electrónico, publicaciones a través de las redes sociales oficiales, o presentaciones con personas designadas en eventos online u offline. La representación del proyecto puede ser clarificada explicitamente por los administradores del proyecto."
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#aplicación",
    "href": "CODIGO_DE_CONDUCTA.html#aplicación",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "Ejemplos de abuso, acoso u otro tipo de comportamiento inaceptable puede ser reportado al equipo del proyecto en florencia.dandrea@gmail.com. Todas las quejas serán revisadas e investigadas, generando un resultado apropiado a las circunstancias. El equipo del proyecto está obligado a mantener confidencialidad de la persona que reportó el incidente. Detalles específicos acerca de las políticas de aplicación pueden ser publicadas por separado. Administradores que no sigan o que no hagan cumplir este Código de Conducta pueden ser eliminados de forma temporal o permanente del equipo administrador."
  },
  {
    "objectID": "CODIGO_DE_CONDUCTA.html#atribución",
    "href": "CODIGO_DE_CONDUCTA.html#atribución",
    "title": "Código de Conducta convenido para Contribuyentes",
    "section": "",
    "text": "Este Código de Conducta es una adaptación del Contributor Covenant, versión 1.4, disponible en https://www.contributor-covenant.org/es/version/1/4/code-of-conduct.html"
  },
  {
    "objectID": "creacion_de_rasters.html",
    "href": "creacion_de_rasters.html",
    "title": "Creación de imagenes raster",
    "section": "",
    "text": "Input inicial - Archivos .csv con datos de movilidad ciudadana expresados por QuadKeys. Existe un archivo por locación y horario reportado.\nObjetivo - Crear las imagenes rasters para cada caso expresando como atributo el cambio porcentual semanal y prepandemia."
  },
  {
    "objectID": "creacion_de_rasters.html#paquete-quadkeyr",
    "href": "creacion_de_rasters.html#paquete-quadkeyr",
    "title": "Creación de imagenes raster",
    "section": "Paquete quadkeyr",
    "text": "Paquete quadkeyr\nLos pasos que se describen aquí se encuentran detallados en la viñeta del paquete quadkeyr que fue especificamente creado para la creación de los rasters."
  },
  {
    "objectID": "creacion_de_rasters.html#leo-los-archivos",
    "href": "creacion_de_rasters.html#leo-los-archivos",
    "title": "Creación de imagenes raster",
    "section": "1. Leo los archivos",
    "text": "1. Leo los archivos\nEsta función me reporta los archivos faltantes en la serie de días y horarios.\n\nBuenos Aires\n\n  library(quadkeyr)\n  \n  files &lt;- quadkeyr::read_fb_mobility_files(\n    path_to_csvs = \"../Desktop/Facebook data/BsAs_facebookpop/\",\n    colnames = c(\n      \"lat\",\n      \"lon\",\n      \"quadkey\",\n      \"date_time\",\n      \"n_crisis\",\n      \"percent_change\"\n    ),\n    coltypes = list(\n      lat = 'd',\n      lon = 'd',\n      quadkey = 'c',\n      date_time = 'T',\n      n_crisis = 'c',\n      percent_change = 'c'\n    )\n  )\n\nPor ejemplo, estos fueron los faltantes para los datos de AMBA:\nday time\n1  2020-07-03    0\n2  2020-07-04    0\n3  2020-07-05    0\n4  2020-07-06    0\n5  2020-07-07    0\n6  2020-07-08    0\n7  2020-07-09    0\n8  2020-07-10    0\n9  2020-07-11    0\n10 2020-07-12    0\n11 2020-09-12    0\n12 2020-09-13    0\n13 2020-07-03    8\n14 2020-07-04    8\n15 2020-07-05    8\n16 2020-07-06    8\n17 2020-07-07    8\n18 2020-07-08    8\n19 2020-07-09    8\n20 2020-07-10    8\n21 2020-07-11    8\n22 2020-07-12    8\n23 2020-09-12    8\n24 2020-09-13    8\n25 2020-07-03   16\n26 2020-07-04   16\n27 2020-07-05   16\n28 2020-07-06   16\n29 2020-07-07   16\n30 2020-07-08   16\n31 2020-07-09   16\n32 2020-07-10   16\n33 2020-07-11   16\n34 2020-09-12   16"
  },
  {
    "objectID": "creacion_de_rasters.html#convierto-los-quadkeys-en-coordenadas-del-mapa",
    "href": "creacion_de_rasters.html#convierto-los-quadkeys-en-coordenadas-del-mapa",
    "title": "Creación de imagenes raster",
    "section": "2. Convierto los QuadKeys en coordenadas del mapa",
    "text": "2. Convierto los QuadKeys en coordenadas del mapa\n\nTomo todos los QuadKeys que fueron reportados al menos una vez en mi lista de archivos .csv y los convierto en latitud y longitud.\nEste punto representa la ubicación del vértice de arriba a la izquierda de cada QuadKey.\n\n\n  regular_grid &lt;- quadkeyr::get_regular_polygon_grid(data = files)\n  files_polygons &lt;- files |&gt; \n    dplyr::inner_join(regular_grid$data, \n                          by = c(\"quadkey\")) \n\n\n    # Generate the raster files                       \n  quadkeyr::polygon_to_raster(data = files_polygons,\n                    nx = regular_grid$num_cols,\n                    ny = regular_grid$num_rows,\n                    template = files_polygons,\n                    var = 'percent_change',\n                    filename = 'BuenosAires',\n                    path = \"../Desktop/Facebook data/rasters_baires/\")\n\n\n  # 7 days\n  files_polygons_7 &lt;- files_polygons |&gt;\n    apply_weekly_lag()\n  \n  # Generate the raster files                       \n  quadkeyr::polygon_to_raster(data = files_polygons,\n                    nx = regular_grid$num_cols,\n                    ny = regular_grid$num_rows,\n                    template = files_polygons,\n                    var = 'percent_change',\n                    filename = 'BuenosAires',\n                    path = \"../Desktop/Facebook data/rasters_baires/\")"
  },
  {
    "objectID": "creacion_de_rasters.html#completar-la-grilla-de-quadkeys",
    "href": "creacion_de_rasters.html#completar-la-grilla-de-quadkeys",
    "title": "Creación de imagenes raster",
    "section": "3. Completar la grilla de QuadKeys",
    "text": "3. Completar la grilla de QuadKeys\n\nSi bien un gran número de QuadKeys que son siempre reportados en todos los archivos, esto no es una constante.\nLa función regular_qk_grid permite completar la grilla. Esta función devuelve una lista con 3 elementos: data, num_rows y num_cols.\n\n\nregular_grid &lt;- regular_qk_grid(qtll)\nregular_grid"
  },
  {
    "objectID": "creacion_de_rasters.html#crear-los-polígonos",
    "href": "creacion_de_rasters.html#crear-los-polígonos",
    "title": "Creación de imagenes raster",
    "section": "4. Crear los polígonos",
    "text": "4. Crear los polígonos\n\npolygrid &lt;- grid_to_polygon(regular_grid$data)"
  },
  {
    "objectID": "creacion_de_rasters.html#generar-los-rasters-para-las-variables-de-interés",
    "href": "creacion_de_rasters.html#generar-los-rasters-para-las-variables-de-interés",
    "title": "Creación de imagenes raster",
    "section": "5. Generar los rasters para las variables de interés",
    "text": "5. Generar los rasters para las variables de interés\nLa función apply_weekly_lag() permite generar los datos de cambio porcentual semanal creando un lag de 7 días.\n\npolyvar &lt;- files |&gt;\n            dplyr::inner_join(polygrid, by = 'quadkey' ) |&gt;\n            apply_weekly_lag() \n\npolyvar7 &lt;-  polyvar |&gt;\n               drop_na(percent_change_7)\n\nLoas imagenes raster se crearan automaticamente para todos los archivos en la carpeta con el formato &lt;nombre&gt;_&lt;fecha&gt;_&lt;hora&gt;.tif. La función polygon_to_raster va a crear los raster incluso si hay algún archivo de la serie faltante.\n\n# cambio porcentual prepandemia\npolygon_to_raster(data = polyvar,\n                  nx = grid$num_cols +1 ,\n                  ny = grid$num_rows +1 ,\n                  template = polyvar,\n                  variable = 'percent_change',\n                  filename = 'Baires',\n                  path = \"data/\"\n                  )\n\n# cambio porcentual semanal\npolygon_to_raster(data = polyvar7,\n                  nx = grid$num_cols +1 ,\n                  ny = grid$num_rows +1 ,\n                  template = polyvar7,\n                  variable = 'percent_change_7',\n                  filename = 'Baires',\n                  path = \"data/\"\n                  )\n\n\nAMBA\n\nlibrary(quadkeyr)\n\nfiles &lt;- quadkeyr::read_fb_mobility_files(\n  path_to_csvs = \"../../Desktop/Facebook data/AMBA_facebookpop/\",\n  keep_format = \"country\",\n  colnames = c(\n    \"lat\",\n    \"lon\",\n    \"quadkey\",\n    \"country\",\n    \"date_time\",\n    \"n_crisis\",\n    \"percent_change\"\n  ),\n  coltypes = list(\n    lat = 'd',\n    lon = 'd',\n    quadkey = 'c',\n    country = 'c',\n    date_time = 'T',\n    n_crisis = 'c',\n    percent_change = 'c'\n  )\n)\n\nAparentemente hay algunos quadkeys problemáticos porque tienen errores, los elimino.\n\n# remuevo los datos problematicos.\nerror_scinot &lt;- subset(files, \n                       quadkey == \"2.10321E+15     \")\n\n# Aparece un error, de un numero que no pudo ser convertido a quadkey,\n# lo separo y lo guardo\n\nwrite.csv(error_scinot, \n          \"data/remove_quadkeys_amba.csv\")\n\n# dejo solo los quadkeys reportados para argentina\n# asi remuevo otros que aparecen para uruguay o en el mar\nfiles = subset(files,\n               country == 'AR')\n# remuevo los datos problematicos.\nfiles = subset(files, \n               quadkey != \"2.10321E+15     \")\n\nObtengo la grilla con los QuadKeys\n\nlibrary(sf)\namba &lt;- st_read('data/amba_reducido.gpkg')\n\njoined_data &lt;- st_join(regular_grid$data,\n                       amba,\n                       left = FALSE)\n\nfiles_polygons &lt;- files |&gt; \n  dplyr::inner_join(joined_data, \n                    by = c(\"quadkey\")) \n\nregular_grid &lt;- get_regular_polygon_grid(data = files)\nregular_grid\n\nCargo el mapa vectorial de AMBA y dejo solo los polígonos que estan incluidos.\nEn joined_data tengo los polígonos incluidos en AMBA\n\n# Generate the raster files                       \npolygon_to_raster(data = files_polygons,\n                  nx = regular_grid$num_cols,\n                  ny = regular_grid$num_rows,\n                  template = files_polygons,\n                  var = 'percent_change',\n                  filename = 'AMBA',\n                  path = \"rasters_amba/\")\n\n\n# 7 days\nfiles_polygons_7 &lt;- files_polygons |&gt;\n  apply_weekly_lag()\n\n# Generate the raster files                       \npolygon_to_raster(data = files_polygons_7,\n                  nx = regular_grid$num_cols,\n                  ny = regular_grid$num_rows,\n                  template = files_polygons_7,\n                  var = 'percent_change_7',\n                  filename = 'AMBA7',\n                  path = \"../Desktop/Facebook data/rasters_amba/\")"
  },
  {
    "objectID": "creacion_de_rasters.html#subida-de-los-archivos-a-postgresql",
    "href": "creacion_de_rasters.html#subida-de-los-archivos-a-postgresql",
    "title": "Creación de imagenes raster",
    "section": "Subida de los archivos a PostgreSQL",
    "text": "Subida de los archivos a PostgreSQL\nExtraido de https://sysadminguides.org/2017/05/02/how-to-pass-credentials-in-powershell/\n # Configurar la variable PGPASSWORD en la terminal antes de correr\n$env:PGPASSWORD = \"####\"\n\n# Append postrgres to path\n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\bin\" \n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\lib\" \n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\share\\contrib\\postgis-3.4\\proj\\proj.db\"\n\n# Database connection parameters\n$DBNAME=\"geocovidapp_db\"\n$USER=\"####\"\n$PORT=\"####\"\n\n$PGPASSWORD\n\n# Define variables\n$RASTER_DIRECTORY = \"C:\\Users\\florencia\\Documents\\rasters\\rasters_amba\\amba_pc\\\"\n$RASTER_FILES = Get-ChildItem -Path $RASTER_DIRECTORY -Filter \"*.tif\"\n$RASTER_FULLPATH = Get-ChildItem -Path $RASTER_DIRECTORY -Filter \"*.tif\" | ForEach-Object {Join-Path -Path $RASTER_DIRECTORY -ChildPath $_.Name}\n\n# Loop through raster files\nforeach ($RASTER_FILE in $RASTER_FULLPATH) {\n    # Get raster file name without path and extension\n    $RASTER_NAME = [System.IO.Path]::GetFileNameWithoutExtension($RASTER_FILE)\n\n    # Insert raster data into PostGIS table\n\n    raster2pgsql -a -s 4326 -I -F $RASTER_FILE raster_schema.rasters | psql -d $DBNAME -U $USER -p $PORT \n\n    # Optional: Add metadata to the inserted record\n    # psql -d $DBNAME -U $USER -p $PORT -c \"UPDATE SET filename = 'Raster $RASTER_NAME', description = 'Description for $RASTER_NAME' WHERE rast ~* '$RASTER_NAME';\"\n}\n \nClick izquierdo en el archivo y selecciono run with PowerShell"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "MIT License\nCopyright (c) 2023 geocovid_bsas authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "base_de_datos.html",
    "href": "base_de_datos.html",
    "title": "Base de datos",
    "section": "",
    "text": "La base de datos debe tener una columna para alojar los rasters y otra que permita guardar el nombre del archivo para reconocerlo."
  },
  {
    "objectID": "base_de_datos.html#subida-de-los-archivos-a-postgresql",
    "href": "base_de_datos.html#subida-de-los-archivos-a-postgresql",
    "title": "Base de datos",
    "section": "Subida de los archivos a PostgreSQL",
    "text": "Subida de los archivos a PostgreSQL\nExtraido de https://sysadminguides.org/2017/05/02/how-to-pass-credentials-in-powershell/\n # Configurar la variable PGPASSWORD en la terminal antes de correr\n$env:PGPASSWORD = \"####\"\n\n# Append postrgres to path\n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\bin\" \n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\lib\" \n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\share\\contrib\\postgis-3.4\\proj\\proj.db\"\n\n# Database connection parameters\n$DBNAME=\"geocovidapp_db\"\n$USER=\"####\"\n$PORT=\"####\"\n\n$PGPASSWORD\n\n # Define variables\n$RASTER_DIRECTORY = \"C:\\Users\\florencia\\Documents\\rasters\\rasters_amba\\amba_7dpc\\\"\n$RASTER_FILES = Get-ChildItem -Path $RASTER_DIRECTORY -Filter \"*.tif\"\n$RASTER_FULLPATH = Get-ChildItem -Path $RASTER_DIRECTORY -Filter \"*.tif\" | ForEach-Object {Join-Path -Path $RASTER_DIRECTORY -ChildPath $_.Name}\n\n# Loop through raster files\nforeach ($RASTER_FILE in $RASTER_FULLPATH) {\n    # Get raster file name without path and extension\n    $RASTER_NAME = [System.IO.Path]::GetFileNameWithoutExtension($RASTER_FILE)\n\n    # Insert raster data into PostGIS table\n\n    raster2pgsql -a -s 4326 -I -F $RASTER_FILE raster_schema.rasters_geo | psql -d $DBNAME -U $USER -p $PORT \n\n    # Optional: Add metadata to the inserted record\n    # psql -d $DBNAME -U $USER -p $PORT -c \"UPDATE SET filename = 'Raster $RASTER_NAME', description = 'Description for $RASTER_NAME' WHERE rast ~* '$RASTER_NAME';\"\n} \nClick izquierdo en el archivo y selecciono run with PowerShell Este archivo permite subir los raster a la base de datos.\npowershell.exe -File .\\filename.ps1\nPara crear las tablas use este schema:\nCREATE TABLE raster_schema.raster_geo_amba (\n    id SERIAL PRIMARY KEY, -- Unique identifier for each record\n    filename TEXT NOT NULL, -- Column to store the filename (adjust as needed)\n    rast raster,            -- Column to store the raster data (PostGIS raster type)\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Optional: to store creation timestamp\n);"
  },
  {
    "objectID": "calculo_movilidad_por_departamento.html",
    "href": "calculo_movilidad_por_departamento.html",
    "title": "Cálculo de movilidad por departamento de la provincia",
    "section": "",
    "text": "Input inicial - Imagenes rasters .tif de cambio porcentual semanal y prepandemia para locación, dia y horario reportado generadas en ‘Creacion de rasters’.\nObjetivo - Obtener un dataset con los valores promedio de movilidad ciudadana tanto para cambio porcentual semanal como prepandemia, en cada locación y momento en el que haya disponible una imagen raster. - Nueva variable que promedie los valores de cambio porcentual semanal como prepandemia para mañana y tarde, ya que se asume que deberían ser similares."
  },
  {
    "objectID": "calculo_movilidad_por_departamento.html#guardo-información-de-los-rasters-en-un-dataset",
    "href": "calculo_movilidad_por_departamento.html#guardo-información-de-los-rasters-en-un-dataset",
    "title": "Cálculo de movilidad por departamento de la provincia",
    "section": "1. Guardo información de los rasters en un dataset",
    "text": "1. Guardo información de los rasters en un dataset\nGenero una base de datos con los polígonos de los departamentos de provincia de Buenos Aires (no los rasters solo de AMBA) y la ubicación de los archivos en el sistema.\n\nbase_raster_baires &lt;- geocovidapp::base_raster |&gt;\n  dplyr::filter(locacion == 'baires') |&gt;\n  dplyr::cross_join(geocovidapp::bsas) |&gt;\n  dplyr::mutate(\n    file = dplyr::case_when(\n      tipo_de_raster == 'pc' ~ paste0('rasters_baires/baires_pc/', filename),\n      tipo_de_raster == '7dpc' ~ paste0('rasters_baires/baires_7dpc/', filename),\n      TRUE ~ NA)  \n  ) |&gt;\n  sf::st_as_sf()"
  },
  {
    "objectID": "calculo_movilidad_por_departamento.html#promedio-de-valores-de-movilidad-ciudadana-por-departamento-de-bs.-as.",
    "href": "calculo_movilidad_por_departamento.html#promedio-de-valores-de-movilidad-ciudadana-por-departamento-de-bs.-as.",
    "title": "Cálculo de movilidad por departamento de la provincia",
    "section": "2. Promedio de valores de movilidad ciudadana por departamento de Bs. As.",
    "text": "2. Promedio de valores de movilidad ciudadana por departamento de Bs. As.\n\nEsto lo realizamos tanto para los rasters de 0 am (noche), 8 am (mañana) y tarde (4 pm).\nSe crea una variable, px_mean_dianoche, que promedia los valores de mañana (8 am) y tarde (4 pm).\n\n\npx_baires &lt;- c()\n\nfor(i in 1:nrow(base_raster_baires)){\n  \n  # Cada fila corresponde a un partido diferente\n  poli &lt;- sf::st_as_sf(base_raster_baires[i, c('partido','geometry')]) \n  \n  # si bien el raster va a ser el mismo en muchos casos\n  raster &lt;- terra::rast(base_raster_baires$file[i])\n  \n # Extraigo el valor promedio de pixeles para ese partido y raster\n  int_data &lt;- terra::extract( raster,\n                               sf::st_as_sf(poli),\n                               fun = mean,\n                               na.rm = TRUE)\n\n  # Guardo en un dataframe\n  px_data &lt;- data.frame(base_raster_baires[i,],\n                        'px_mean' = int_data[[2]] \n  )\n  \n  # El loop me permite guardar la informacion de cada partido para todo BsAs\n  px_baires &lt;- rbind(px_data, px_baires)\n}\n\n# para los valores promedio del dia, vuelvo a crear un promedio\npx_baires_w &lt;- px_baires |&gt;\n  select(fecha, locacion, tipo_de_raster, \n         momento, hora, partido, px_mean, geom) |&gt;\n  pivot_wider(\n    names_from = c(momento, hora),\n    values_from = px_mean) |&gt; # esto habria que\n  mutate(px_mean_dianoche = ((mañana_8 + tarde_16)/2))\n\n\npx_baires_w \n\nLas variables px_mean_dianoche y noche_0 se convierten en categóricas.\n\n  px_bsas &lt;-  px_baires_w  |&gt;\n           # dplyr::filter(fecha == '2020-05-06',\n           #            tipo_de_raster == 'pc'\n           #            ) |&gt;\n         dplyr::mutate(criterio = case_when(px_mean_dianoche &gt; 40 ~ \"mas de 40\",\n                                     40 &gt; px_mean_dianoche &\n                                       px_mean_dianoche &gt; 30 ~ \"40 - 30\",\n                                     30 &gt; px_mean_dianoche &\n                                       px_mean_dianoche &gt; 20 ~ \"30 - 20\",\n                                     20 &gt; px_mean_dianoche &\n                                       px_mean_dianoche &gt; 10 ~ \"20 - 10\",\n                                     10 &gt; px_mean_dianoche & \n                                       px_mean_dianoche &gt; 1 ~ \"10 - 1\",\n                                     1 &gt; px_mean_dianoche &\n                                       px_mean_dianoche&gt; -1 ~ \"sin cambios\",\n                                     -1 &gt; px_mean_dianoche& \n                                       px_mean_dianoche &gt; -10 ~ \"-1 - -10\",\n                                     -10 &gt; px_mean_dianoche& \n                                       px_mean_dianoche &gt; -20 ~ \"-10 - -20\",\n                                     -20 &gt; px_mean_dianoche& \n                                       px_mean_dianoche &gt; -30 ~ \"-20 - -30\",\n                                     -30 &gt; px_mean_dianoche& \n                                       px_mean_dianoche &gt; -40 ~ \"-30 - -40\",\n                                     -40 &gt; px_mean_dianoche  ~ \"menor a -40\"),\n         criterio_noche = case_when(noche_0 &gt; 40 ~ \"mas de 40\",\n                                     40 &gt; noche_0 &\n                                       noche_0 &gt; 30 ~ \"40 - 30\",\n                                     30 &gt; noche_0 &\n                                       noche_0 &gt; 20 ~ \"30 - 20\",\n                                     20 &gt; noche_0 &\n                                       noche_0 &gt; 10 ~ \"20 - 10\",\n                                     10 &gt; noche_0 &\n                                       noche_0 &gt; 1 ~ \"10 - 1\",\n                                     1 &gt; noche_0 &\n                                       noche_0&gt; -1 ~ \"sin cambios\",\n                                     -1 &gt; noche_0 &\n                                       noche_0 &gt; -10 ~ \"-1 - -10\",\n                                     -10 &gt; noche_0 &\n                                       noche_0 &gt; -20 ~ \"-10 - -20\",\n                                     -20 &gt; noche_0 &\n                                       noche_0 &gt; -30 ~ \"-20 - -30\",\n                                     -30 &gt; noche_0 &\n                                       noche_0 &gt; -40 ~ \"-30 - -40\",\n                                     -40 &gt; noche_0  ~ \"menor a -40\")) |&gt;\n         dplyr::mutate(criterio = fct_relevel(criterio, c(\"mas de 40\", \n                                                   \"40 - 30\",\n                                                   \"30 - 20\",\n                                                   \"20 - 10\",\"10 - 1\",\n                                                   \"sin cambios\",\n                                                   \"-1 - -10\", \n                                                   \"-10 - -20\",\n                                                   \"-20 - -30\", \n                                                   \"-30 - -40\",\n                                                   \"menor a -40\")),\n                criterio_noche = fct_relevel(criterio_noche, \n                                             c(\"mas de 40\", \n                                                   \"40 - 30\",\n                                                   \"30 - 20\",\n                                                   \"20 - 10\",\n                                                   \"10 - 1\",\n                                                   \"sin cambios\",\n                                                   \"-1 - -10\", \n                                                   \"-10 - -20\",\n                                                   \"-20 - -30\", \n                                                   \"-30 - -40\",\n                                                   \"menor a -40\"))) |&gt;\n  st_as_sf()\n\nPara subir los datos a PostgreSQL uso el siguiente código.\n\n# Conecto con la base de datos\ndb &lt;- config::get(\"database\")\n\npool &lt;- dbConnect(\n  RPostgres::Postgres(),\n  dbname = db$dbname,\n  user = db$user,\n  password = db$password,\n  port = db$port,\n  host = db$host\n)\n# In SQL terminal -&gt; \"CREATE SCHEMA IF NOT EXISTS px_promedio;\"\nst_write(\n  obj = px_bsas,\n  dsn = pool,\n  layer = DBI::Id(schema = \"px_promedio\", table = \"px_promedio\"),\n  layer_options = \"OVERWRITE=YES\"\n)\n\nNote: method with signature 'DBIObject#sf' chosen for function 'dbDataType',\n target signature 'PqConnection#sf'.\n \"PqConnection#ANY\" would also be valid\n\n# Disconnect\ndbDisconnect(pool)"
  },
  {
    "objectID": "calculo_movilidad_por_departamento.html#mapa-de-provincia-de-buenos-aires",
    "href": "calculo_movilidad_por_departamento.html#mapa-de-provincia-de-buenos-aires",
    "title": "Cálculo de movilidad por departamento de la provincia",
    "section": "3. Mapa de provincia de Buenos Aires",
    "text": "3. Mapa de provincia de Buenos Aires\nAhora visualizo los datos.\n\n# escala de color por categoria\n\n  colors &lt;- c(\"mas de 40\"=\"#67001F\",\n              \"40 - 30\"=\"#B2182B\",\n              \"30 - 20\"=\"#D6604D\",\n              \"20 - 10\"=\"#F4A582\",\n              \"10 - 1\"=\"#FDDBC7\",\n              \"sin cambios\"=\"#F7F7F7\",\n              \"-1 - -10\" =\"#D1E5F0\",\n              \"-10 - -20\"=\"#92C5DE\",\n              \"-20 - -30\"=\"#4393C3\",\n              \"-30 - -40\"=\"#2166AC\",\n              \"menor a -40\"=\"#053061\")\n\n\n plotly::plot_ly() |&gt;\n   plotly::add_sf(stroke = I(\"#95B2C6\"),\n          data = px_bsas,\n          split = ~criterio,\n          name = ~criterio,\n          color = ~criterio,\n          colors = colors,\n          stroke = I(\"transparent\"),\n          hoveron = \"fills\",\n          hoverinfo = 'name',\n          legendgroup = 'criterio',\n          legendgrouptitle = list(text = 'Promedio % de cambio',\n                                  font = list(size = 15,\n                                  family = \"Work Sans\",\n                                  color = \"black\"))\n   ) \n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter"
  },
  {
    "objectID": "creacion_mapa_bsas.html",
    "href": "creacion_mapa_bsas.html",
    "title": "Creación Mapas Buenos Aires",
    "section": "",
    "text": "Input inicial - Mapas vectoriales de provincia de Buenos Aires y AMBA\nObjetivo - Generar mapas de menor tamaño para que la aplicacion no tenga problemas de eficiencia. - Producir un mapa de Buenos Aires dónde no se diferencien las comunas de CABA. - Obtener los centroides de los departamentos de provincia de Buenos Aires\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.5.3, PROJ 9.5.1; sf_use_s2() is TRUE\n\n# El amba consta de 40 municipios mas ciudad de buenos aires\n# fuente: https://www.argentina.gob.ar/dami/centro/amba\n# Vamos a hacer una seleccion de amba con menos partidos\n\n# Lista de los partidos que vamos a considerar AMBA incluyendo comunas CABA\namba_reducido_names &lt;- c('Almirante Brown',\n                         'Avellaneda',\n                         'Berazategui',\n                         paste('Comuna', 1:15), # CABA\n                         'Esteban Echeverría', 'Escobar', 'Ezeiza',\n                         'Florencio Varela',\n                         'General San Martín',\n                         'Hurlingham',\n                         'Ituzaingó',\n                         'José C. Paz',\n                         'La Matanza',  'Lanús', 'Lomas de Zamora',\n                         'Malvinas Argentinas', 'Merlo', 'Moreno', 'Morón',\n                         'Quilmes', 'Pilar', 'Presidente Perón',\n                         'San Fernando', 'San Isidro', 'San Miguel',\n                         'Tigre', 'Tres de Febrero',\n                         'Vicente López')\n\n\nArea Metropolitana de Buenos Aires (AMBA) y Ciudad Autonoma de Buenos Aires (CABA)\n\n# Estos shapefiles fueron extraidos del Instituto Geografico Nacional (IGN)\n\namba &lt;- st_read(\"data/inicial/departamentos.shp\") |&gt;\n  st_zm() |&gt;\n  filter(str_detect(NAM, paste(amba_reducido_names, collapse = \"|\")),\n         SAG %in% c('ARBA - Gerencia de Servicios Catastrales',\n                    'Direc. de Catastro'))\n\nReading layer `departamentos' from data source \n  `/Users/florenciadandrea/geocovid_bsas/data/inicial/departamentos.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 529 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: -74 ymin: -90 xmax: -25 ymax: -21.78113\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# Chequeo el resultado visualmente\namba_reducido &lt;- amba |&gt;\n  dplyr::select('partido' = NAM , geometry) |&gt;\n  dplyr::filter(partido %in% amba_reducido_names)\n\nggplot() +\n  geom_sf(data = amba_reducido)+\n  theme_minimal()\n\n\n\n\n\nRemuevo poligonos duplicados\n\n# Vemos que San Fernando esta compuesto por dos poligonos,\n# Uno es el delta, y deberiamos eliminarlo\n\nggplot() +\n  geom_sf(data = subset(amba_reducido,\n                        partido == 'San Fernando'))+\n  theme_minimal()\n\n\n\n# Lo paso a poligono para eliminar el extra\namba_reducido = st_cast(amba_reducido,\"POLYGON\")\n\nWarning in st_cast.sf(amba_reducido, \"POLYGON\"): repeating attributes for all\nsub-geometries for which they may not be constant\n\n# Chequeo que se cual quiero eliminar\nggplot() +\n  geom_sf(data = amba_reducido$geom[30])+\n  theme_minimal()\n\n\n\n# Elimino el poligono extra\namba_reducido &lt;- amba_reducido[-30,]\n\n# Archivo vectorial final de AMBA\nggplot() +\n  geom_sf(data = amba_reducido)+\n  theme_minimal()\n\n\n\n\nEste es el archivo con los poligonos finales seleccionados para AMBA\n\n## guardo el archivo\n\nst_write(amba_reducido, \"data/procesada/amba_reducido.gpkg\", append = FALSE)\n\nDeleting layer `amba_reducido' using driver `GPKG'\nWriting layer `amba_reducido' to data source \n  `data/procesada/amba_reducido.gpkg' using driver `GPKG'\nWriting 42 features with 1 fields and geometry type Polygon.\n\n\n\n\n\nProvincia de Buenos Aires\n\n# Obtengo los poligonos desde el IGN\nbsas &lt;- sf::st_read('data/inicial/departamentos.shp') |&gt;\n  dplyr::filter(SAG %in% c('Direc. de Catastro', # comunas\n                           'ARBA - Gerencia de Servicios Catastrales'), # partidos de baires\n                GNA %in% c('Partido', 'Comuna')) |&gt; # elimino prov de san juan\n  dplyr::select('partido' = NAM, geometry) |&gt;\n  sf::st_zm()\n\nReading layer `departamentos' from data source \n  `/Users/florenciadandrea/geocovid_bsas/data/inicial/departamentos.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 529 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: -74 ymin: -90 xmax: -25 ymax: -21.78113\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n# Lo paso a poligono para eliminar el extra en San Fernando\nbsas = st_cast(bsas,\"POLYGON\")\n\nWarning in st_cast.sf(bsas, \"POLYGON\"): repeating attributes for all\nsub-geometries for which they may not be constant\n\n# Chequeo el numero de poligono que quiero eliminar\nggplot() +\n  geom_sf(data = bsas$geometry[126])+\n  theme_minimal()\n\n\n\n# Elimino el poligono extra\nbsas &lt;- bsas[-126,]\n\n# Mapa final\nggplot() +\n  geom_sf(data = bsas)+\n  theme_minimal()\n\n\n\n# Llamo al archivo bsas_comunas ya que presenta las comunas de CABA\nwrite_sf(bsas, 'data/procesada/bsas_comunas.gpkg')\n\n\nUnifico las comunas\n\n  # uno las comunas\n  caba &lt;-  bsas[grep(\"Comuna\", bsas$partido), ] |&gt;\n           st_union()\n\n  # aca podria agregar algun tipo de control de calidad para asegurarme que\n  # tengo la cantidad de comunas que son\n  # chequear que tenga proyeccion\n\n\n  # las reemplazo en el dataset por caba\n bsas_caba &lt;-  bsas |&gt;\n    slice(-grep(\"Comuna\", bsas$partido)) |&gt;\n    rbind(st_sf(\n                geometry = caba,\n                partido = 'Capital Federal'\n    ))\n\n\n\n ggplot() +\n        geom_sf(data = subset(bsas_caba,\n                              partido == 'Capital Federal')) + \n        theme_minimal()\n\n\n\n# Llamo a este archivo bsas ya que no presenta la division interna de CABA\n# en comunas\n \nwrite_sf(bsas_caba, 'data/procesada/bsas.gpkg')\n\n\n\nSimplifico los poligonos para agilizar la app\n\nbsas_caba &lt;- st_read('data/procesada/bsas.gpkg')\n\nReading layer `bsas' from data source \n  `/Users/florenciadandrea/geocovid_bsas/data/procesada/bsas.gpkg' \n  using driver `GPKG'\nSimple feature collection with 136 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -63.38597 ymin: -41.03791 xmax: -56.66499 ymax: -33.26185\nGeodetic CRS:  WGS 84\n\n# Es posible emplear la funcion st_simplify para esto mismo, pero no conserva\n# tan bien la topografia entre los poligonos, es por ello que uso este paquete\n# donde se aplica el algoritmo de Visvalingam\n\nlibrary(rmapshaper)\nbsas_caba_simple &lt;- rmapshaper::ms_simplify(bsas_caba)\n\n\n\nIncluyo coordenadas de la bounding box\nRealizo este paso para que sea más sencillo hacer el zoom en el mapa.\n\n# Agrego coordenadas al mapa de BsAs que voy a necesitar\n# para hacer zoom en la app\n\n\nfor(i in seq_along(1:nrow(bsas_caba_simple))){\n  \n  bsas_caba_simple[i, \"lat1\"] &lt;- sf::st_bbox(bsas_caba_simple[i,])$ymin\n  bsas_caba_simple[i,\"lat2\"] &lt;- sf::st_bbox(bsas_caba_simple[i,])$ymax\n  bsas_caba_simple[i, \"lng1\"] &lt;- sf::st_bbox(bsas_caba_simple[i,])$xmin\n  bsas_caba_simple[i, \"lng2\"] &lt;- sf::st_bbox(bsas_caba_simple[i,])$xmax\n  \n}\n\nst_write(bsas_caba_simple, \"data/procesada/bsas_final.gpkg\", append=FALSE)\n\nDeleting layer `bsas_final' using driver `GPKG'\nWriting layer `bsas_final' to data source \n  `data/procesada/bsas_final.gpkg' using driver `GPKG'\nWriting 136 features with 5 fields and geometry type Polygon.\n\n\n\n\nCalculo de centroides\n\ncent &lt;- bsas_caba_simple |&gt; \n  st_point_on_surface()\n\nWarning: st_point_on_surface assumes attributes are constant over geometries\n\n\nWarning in st_point_on_surface.sfc(st_geometry(x)): st_point_on_surface may not\ngive correct results for longitude/latitude data\n\n# guardo el archivo con los vectores de partidos de provincia de Buenos Aires\n\nggplot() +\n  geom_sf(data = bsas_caba)+\n  geom_sf(data = cent) +\n  theme_minimal()\n\n\n\n\n\n# Cambio nombres de partidos para evitar problemas al momento de hacer joins\ncent[78,'partido'] &lt;- 'Lomas De Zamora'\ncent[132,'partido'] &lt;- 'Tres De Febrero'\n\n\ncent &lt;- cent |&gt;\n         # salgo del formato sf: calculo lat y long como variables separadas\n          cbind(sf::st_coordinates(cent)) |&gt;\n          dplyr::arrange(partido) |&gt; \n          select(-lat1, -lat2, -lng1, -lng2)\n\n# elimino el formato sf\nsf::st_geometry(cent) &lt;-  NULL\n\ncent\n\n                               partido         X         Y\n1                           25 de Mayo -60.28153 -35.55392\n2                           9 de Julio -60.92597 -35.53430\n3                        Adolfo Alsina -62.95972 -37.16983\n4               Adolfo Gonzales Chaves -60.28791 -37.94044\n5                              Alberti -60.28311 -35.02820\n6                      Almirante Brown -58.37581 -34.83383\n7                            Arrecifes -60.01660 -34.00289\n8                           Avellaneda -58.33643 -34.67923\n9                             Ayacucho -58.59323 -36.97672\n10                                Azul -59.68005 -36.83704\n11                        Bahía Blanca -62.18668 -38.59020\n12                            Balcarce -58.18939 -37.75310\n13                            Baradero -59.44140 -33.90786\n14                       Benito Juárez -59.88628 -37.58798\n15                         Berazategui -58.14120 -34.84363\n16                             Berisso -57.85202 -34.89866\n17                             Bolívar -61.15579 -36.29357\n18                             Bragado -60.60463 -35.02820\n19                            Brandsen -58.23788 -35.19553\n20                             Campana -58.88924 -34.15991\n21                     Capital Federal -58.43547 -34.61515\n22                   Capitán Sarmiento -59.84528 -34.14161\n23                      Carlos Casares -61.29527 -35.73349\n24                      Carlos Tejedor -62.43390 -35.39224\n25                     Carmen de Areco -59.92388 -34.42105\n26                            Castelli -57.65124 -36.01938\n27                            Cañuelas -58.72227 -35.15660\n28                           Chacabuco -60.32958 -34.63540\n29                           Chascomús -57.87466 -35.59756\n30                           Chivilcoy -59.97838 -34.90887\n31                               Colón -61.04032 -33.85050\n32                     Coronel Dorrego -61.15382 -38.64395\n33                    Coronel Pringles -61.24195 -38.16803\n34                      Coronel Suárez -61.91250 -37.54200\n35  Coronel de Marina Leonardo Rosales -61.93088 -38.81603\n36                            Daireaux -61.94126 -36.61709\n37                             Dolores -57.59941 -36.42196\n38                            Ensenada -57.97776 -34.84021\n39                             Escobar -58.77772 -34.34234\n40                  Esteban Echeverría -58.47645 -34.82407\n41               Exaltación de la Cruz -59.13155 -34.31044\n42                              Ezeiza -58.57336 -34.87375\n43                    Florencio Varela -58.25360 -34.88657\n44                 Florentino Ameghino -62.41611 -34.88750\n45                    General Alvarado -58.06044 -38.20038\n46                      General Alvear -60.10413 -36.04127\n47                    General Arenales -61.29278 -34.23922\n48                    General Belgrano -58.61672 -35.84266\n49                       General Guido -57.94733 -36.67494\n50              General Juan Madariaga -57.28162 -37.16193\n51                   General La Madrid -61.28003 -37.40732\n52                   General Las Heras -58.99601 -34.90984\n53                     General Lavalle -57.01046 -36.67784\n54                         General Paz -58.33569 -35.47546\n55                       General Pinto -61.97697 -34.68665\n56                  General Pueyrredón -57.78250 -37.97401\n57                   General Rodríguez -58.99482 -34.64047\n58                    General Viamonte -61.06068 -34.98104\n59                    General Villegas -62.99874 -34.87244\n60                             Guaminí -62.43702 -36.90480\n61                   Hipólito Yrigoyen -61.69276 -36.27273\n62                          Hurlingham -58.65275 -34.59981\n63                           Ituzaingó -58.68822 -34.64233\n64                         José C. Paz -58.78106 -34.50335\n65                               Junín -60.96998 -34.54486\n66                            La Costa -56.69242 -36.66074\n67                          La Matanza -58.63546 -34.77297\n68                            La Plata -57.99139 -35.03789\n69                               Lanús -58.39866 -34.70293\n70                             Laprida -60.64166 -37.49570\n71                          Las Flores -59.12327 -36.01897\n72                     Leandro N. Alem -61.64284 -34.49384\n73                              Lezama -57.93164 -35.86462\n74                             Lincoln -61.80579 -35.09365\n75                             Lobería -58.68880 -38.07036\n76                               Lobos -59.15286 -35.20128\n77                     Lomas De Zamora -58.57596 -34.54360\n78                     Lomas de Zamora -58.41026 -34.74998\n79                               Luján -59.15158 -34.58838\n80                           Magdalena -57.62397 -35.18716\n81                               Maipú -57.58922 -36.89209\n82                 Malvinas Argentinas -58.72082 -34.48464\n83                        Mar Chiquita -57.60642 -37.51881\n84                          Marcos Paz -58.83455 -34.82132\n85                            Mercedes -59.42672 -34.70347\n86                               Merlo -58.74705 -34.70788\n87                               Monte -58.75188 -35.49808\n88                       Monte Hermoso -61.28918 -38.95552\n89                              Moreno -58.80228 -34.59624\n90                               Morón -58.61937 -34.64628\n91                             Navarro -59.39377 -35.02273\n92                            Necochea -59.11314 -38.17667\n93                           Olavarría -60.71476 -36.85806\n94                           Patagones -62.86131 -40.18127\n95                             Pehuajó -61.97322 -35.90659\n96                          Pellegrini -63.16732 -36.24039\n97                                Pila -58.38114 -36.23235\n98                               Pilar -58.89737 -34.44171\n99                             Pinamar -56.86715 -37.10634\n100                   Presidente Perón -58.41364 -34.94209\n101                        Punta Indio -57.34538 -35.45684\n102                               Puán -63.03783 -38.11116\n103                            Quilmes -58.27554 -34.74127\n104                            Ramallo -60.03576 -33.58824\n105                              Rauch -58.91645 -36.60297\n106                          Rivadavia -63.02164 -35.57785\n107                              Rojas -60.72242 -34.19580\n108                        Roque Pérez -59.21778 -35.52084\n109                           Saavedra -62.43006 -37.74616\n110                          Saladillo -59.64920 -35.68244\n111                         Salliqueló -63.04286 -36.67565\n112                              Salto -60.30479 -34.24776\n113                San Andrés de Giles -59.47306 -34.42320\n114               San Antonio de Areco -59.56440 -34.20744\n115                       San Cayetano -59.63009 -38.40343\n116                       San Fernando -58.56731 -34.45870\n117                         San Isidro -58.53767 -34.48685\n118                         San Miguel -58.70178 -34.55303\n119                        San Nicolás -60.28747 -33.47246\n120                          San Pedro -59.82146 -33.79661\n121                        San Vicente -58.42015 -35.08145\n122                           Suipacha -59.71374 -34.73507\n123                             Tandil -59.18070 -37.33613\n124                           Tapalqué -60.22351 -36.36921\n125                              Tigre -58.61231 -34.40115\n126                           Tordillo -57.22011 -36.41438\n127                          Tornquist -62.18618 -38.26284\n128                    Trenque Lauquen -62.69757 -36.04662\n129                       Tres Arroyos -60.26733 -38.47286\n130                    Tres De Febrero -60.58050 -33.86411\n131                         Tres Lomas -62.88158 -36.48679\n132                    Tres de Febrero -58.56250 -34.60183\n133                      Vicente López -58.50640 -34.52899\n134                       Villa Gesell -57.06391 -37.36494\n135                          Villarino -62.86191 -39.15349\n136                             Zárate -59.14666 -34.00438\n\n\n\n# guardo los centroides\nwrite.csv(cent, \"data/procesada/centroides_mapa.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GeoCovid Buenos Aires",
    "section": "",
    "text": "Este repositorio contiene cuatro reportes que recopilan el procesamiento de los datos de COVID-19, movilidad ciudadana, mapas vectoriales e imágenes raster para provincia de Buenos Aires en el marco de la creación de la aplicación GeoCovid app Buenos Aires."
  },
  {
    "objectID": "index.html#reportes",
    "href": "index.html#reportes",
    "title": "GeoCovid Buenos Aires",
    "section": "Reportes",
    "text": "Reportes\n\n1. Creación de los mapas vectoriales de Buenos Aires y sus centroides\n\nLos mapas de las comunas de Ciudad Autónoma de Buenos Aires fueron descargados de BA Data, mientras que los poligonos correspondientes a los partidos de provincia de Buenos Aires se descargaron del Instituto Geográfico Nacional Argentino.\n\n\n\n2. Análisis de la base de datos de casos de COVID-19\n\nSe analizaron unicamente datos para prov. de Buenos Aires.\nSe crean nuevas variables para su uso en GeoCovid app.\nArchivo historico de casos de COVID-19 registrados desde el 01/03/2020 hasta el 04/06/2022 - Dirección Nacional de Epidemiología y Análisis de Situación de Salud.\nEstos datos son públicos y fueron consultados en Julio de 2023 en www.datos.salud.gob.ar.\n\n\n\n3. Creación de imagenes raster\n\nLos datos de movilidad ciudadana fueron brindados por Data for Good - Meta\nEl procesamiento de los datos y la generacion de los rasters fue realizado usando el paquete quadkeyr.\n\n\n\n4. Cálculo de la movilidad porcentual por departamento de prov. de Bs.As.\n\nLos datos de movilidad ciudadana fueron brindados por Data for Good - Meta y se promediaron para los mapas vectoriales de prov. de Buenos Aires mencionados en el punto 1."
  },
  {
    "objectID": "index.html#proyectos-relacionados",
    "href": "index.html#proyectos-relacionados",
    "title": "GeoCovid Buenos Aires",
    "section": "Proyectos relacionados",
    "text": "Proyectos relacionados\nEl paquete quadkeyr, GeoCovid Buenos Aires y GeoCovid App son parte del mismo proyecto.\n\nPaquete quadkeyr Permite el analisis de datos de movilidad ciudadana de Meta y su conversión a imagenes raster.\nGeoCovid app Dashboard que permite la visualización de datos de COVID-19 y movilidad ciudadana en conjunto."
  },
  {
    "objectID": "index.html#licencias",
    "href": "index.html#licencias",
    "title": "GeoCovid Buenos Aires",
    "section": "Licencias",
    "text": "Licencias\n\nEl código contenido en este repositorio se encuentra bajo una licencia MIT.\nEl informe contenido en este documento es compartido bajo una licencia Atribución-NoComercial-CompartirIgual 4.0 Internacional. Consulte el archivo de licencia para obtener más información. Si reutiliza información de este reporte proporcione la atribución y el enlace a esta página web empleando esta cita:\n\n\nD’Andrea, F. GeoCovid Buenos Aires [Computer software]. Dr. Fernandez Lab. Washington State University. https://github.com/Fernandez-Lab-WSU/geocovid_bsas"
  },
  {
    "objectID": "index.html#código-de-conducta",
    "href": "index.html#código-de-conducta",
    "title": "GeoCovid Buenos Aires",
    "section": "Código de Conducta",
    "text": "Código de Conducta\nEl proyecto GeoCovid Buenos Aires, GeoCovid app y el paquete quadkeyr se encuentran bajo un Código de Conducta."
  },
  {
    "objectID": "rasters.html",
    "href": "rasters.html",
    "title": "rasters",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(geocovidapp)\nlibrary(config)\n\nDo not use `library(config)` to attach the config package.\nUse `config::get()` directly.\nAttaching the config package can lead to namespace conflicts.\n\n\n\nAttaching package: 'config'\n\n\nThe following objects are masked from 'package:base':\n\n    get, merge\n\nlibrary(terra)\n\nterra 1.8.54\n\nlibrary(rasterVis)\n\nLoading required package: lattice\n\nlibrary(tidyterra)\n\n\nAttaching package: 'tidyterra'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(pool)\n\n\nrasters &lt;- geocovidapp::base_raster |&gt; \n  mutate(\n    fecha = as.Date(fecha),\n    mes = month(fecha, label = TRUE, abbr = FALSE),\n    year = year(fecha))\n\n# Agrupa por año-mes\nrasters_grouped &lt;- rasters  |&gt; \n  group_by(year, mes)  |&gt; \n  group_split()\n\n\n# Conecto con la base de datos\ndb &lt;- config::get(\"database\")\n\npool &lt;- pool::dbPool(\n  drv = RPostgres::Postgres(),\n  dbname = db$dbname,\n  user = db$user,\n  password = db$password,\n  port = db$port,\n  host = db$host\n)\n# onStop(function() {\n#   pool::poolClose(pool)\n# })\n\n\n # Extraer el raster correspondiente\n        raster_data &lt;- geocovidapp::base_raster |&gt;\n          dplyr::filter(\n            tipo_de_raster == \"7dpc\",\n            momento == \"noche\", # es un valor no reactivo\n            locacion == \"amba\"\n          )\n  \n     for (i in seq_len(nrow(raster_data))) {    \n       \n       # Define ancho y alto en pixeles\nancho_px &lt;- 700   # 7 columnas x 100 px cada una (ajustar según necesidad)\nalto_px  &lt;- 400   # 4 filas x 100 px cada una (ajustar según necesidad)\n\n# Nombre del archivo\npng(paste0(\"rasters/\",deframe(raster_data[i, \"file_info\"]),\".png\"), width = ancho_px, height = alto_px, res = 150) # res=150 para buena resolución\n\n     # Bajo el raster de la base de datos\n     r &lt;-   geocovidapp::rasterLoader(pool = pool,\n                    raster_data = raster_data[i,],\n                    area = \"amba\")\n     \n\n# Clasifica el raster en estos bins (regresa un raster con valores enteros 1, 2, ..., 11)\nr_class &lt;- classify(r, rbind(\n  c(40, Inf, 1),\n  c(30, 40, 2),\n  c(20, 30, 3),\n  c(10, 20, 4),\n  c(1, 10, 5),\n  c(-1, 1, 6),\n  c(-10, -1, 7),\n  c(-20, -10, 8),\n  c(-30, -20, 9),\n  c(-40, -30, 10),\n  c(-Inf, -40, 11)\n))\n\n# Ahora define tu paleta (11 colores)\nmy_colors &lt;- c(\n  \"#FF0000\", \"#FF3300\", \"#FF6600\", \"#FF9900\", \"#FFCC00\", # positivos (rojos)\n  \"#FFFFFF\",                                             # neutro (blanco)\n  \"#00FFFF\", \"#00BFFF\", \"#0080FF\", \"#0040FF\", \"#0000FF\"  # negativos (azules)\n)\n\n# Asigna nombres a las clases si quieres\nlevels(r_class) &lt;- data.frame(ID = 1:11,\n                            category = c(\"&gt; 40\", \"30 a 40\", \"20 a 30\", \"10 a 20\", \"1 a 10\",\n               \"-1 a 1\",\n               \"-10 a -1\", \"-20 a -10\", \"-30 a -20\", \"-40 a -30\", \"&lt; -40\"))\n\n\n\n# Plot del raster\nplot(r_class, col = my_colors, legend = FALSE)\n\ndev.off()\n  \n}\n\n\nlibrary(terra)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats 1.0.0     ✔ stringr 1.5.1\n✔ purrr   1.0.4     ✔ tidyr   1.3.1\n✔ readr   2.1.5     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract()    masks terra::extract()\n✖ tidyterra::filter() masks dplyr::filter(), stats::filter()\n✖ dplyr::lag()        masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\nlibrary(patchwork)\n\n\nAttaching package: 'patchwork'\n\nThe following object is masked from 'package:terra':\n\n    area\n\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:patchwork':\n\n    align_plots\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\nlibrary(tibble)\nlibrary(purrr)\nlibrary(lubridate)\n\n# Lista archivos\nfiles &lt;- list.files(\"rasters/\", pattern = \"\\\\.png$\", full.names = TRUE)\n\n  nombres_meses &lt;- c(\n  \"enero\", \"febrero\", \"marzo\", \"abril\", \"mayo\", \"junio\",\n  \"julio\", \"agosto\", \"septiembre\", \"octubre\", \"noviembre\", \"diciembre\"\n) # se puede hacer con lubridate pero implica cambiar la config del sistema a espanol\n  # puede que no sea reproducible en otras pcs\n\n  \nextract_info &lt;- function(path) {\n  # Obtiene solo el nombre base\n  name &lt;- basename(path)\n  # Quita extensión\n  name &lt;- str_remove(name, \"\\\\.png$\")\n  # Divide por guiones bajos\n  parts &lt;- str_split(name, \"_\", simplify = TRUE)\n  \n  tibble(\n    file = path,\n    prefix = parts[1],\n    indicator = parts[2],\n    date = as.Date(parts[3]),\n    suffix = parts[4],\n    month = nombres_meses[month(date)],\n    weekday = weekdays(date, abbreviate = TRUE),\n    weekday_num = wday(date, week_start = 1) # lunes = 1\n  )\n}\n\nimgs_tbl &lt;- map_dfr(files, extract_info)\n\nimgs_tbl\n\n# A tibble: 196 × 8\n   file             prefix indicator date       suffix month weekday weekday_num\n   &lt;chr&gt;            &lt;chr&gt;  &lt;chr&gt;     &lt;date&gt;     &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt;\n 1 rasters//amba_7… amba   7dpc      2020-04-15 0      abril Wed               3\n 2 rasters//amba_7… amba   7dpc      2020-04-16 0      abril Thu               4\n 3 rasters//amba_7… amba   7dpc      2020-04-17 0      abril Fri               5\n 4 rasters//amba_7… amba   7dpc      2020-04-18 0      abril Sat               6\n 5 rasters//amba_7… amba   7dpc      2020-04-19 0      abril Sun               7\n 6 rasters//amba_7… amba   7dpc      2020-04-20 0      abril Mon               1\n 7 rasters//amba_7… amba   7dpc      2020-04-21 0      abril Tue               2\n 8 rasters//amba_7… amba   7dpc      2020-04-22 0      abril Wed               3\n 9 rasters//amba_7… amba   7dpc      2020-04-23 0      abril Thu               4\n10 rasters//amba_7… amba   7dpc      2020-04-24 0      abril Fri               5\n# ℹ 186 more rows\n\n\n\nlibrary(png)\nlibrary(patchwork)\nlibrary(magick)\n\nLinking to ImageMagick 6.9.12.93\nEnabled features: cairo, fontconfig, freetype, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fftw, ghostscript, x11\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Función para mostrar PNG en ggplot\nplot_png &lt;- function(path) {\n  ggdraw() + draw_image(path) +\n    theme(plot.margin = margin(0, 0, 0, 0))\n}\n\n# Agrupa por mes\nimgs_tbl &lt;- imgs_tbl  |&gt; \n  arrange(month, date)  # optional, for safety\n\nplots_per_month &lt;- split(imgs_tbl, imgs_tbl$month)\n\n# Recorre cada grupo por mes\nfor (month_imgs in plots_per_month) {\n  if (nrow(month_imgs) == 0) next  # salta si está vacío\n  \n  # Ordena por weekday_num\n  month_imgs &lt;- month_imgs  |&gt;  arrange(weekday_num)\n  \n  # Crea plots\n  plots &lt;- map(month_imgs$file, plot_png)\n  \n  # Combina en grilla de 7 columnas\n  grid &lt;- wrap_plots(plots, ncol = 7) + plot_annotation(title = imgs_tbl$month) \n  \n  \n  print(grid)\n}"
  }
]
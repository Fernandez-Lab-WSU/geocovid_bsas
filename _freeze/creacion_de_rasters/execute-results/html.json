{
  "hash": "82f4af47e3b1cf4fb44fab3421e0de09",
  "result": {
    "markdown": "---\ntitle: \"Creación de imagenes raster\"\nlang: es\n---\n\n\n---\n\n**Input inicial**\n- Archivos `.csv` con datos de movilidad ciudadana expresados por QuadKeys.\nExiste un archivo por locación y horario reportado.\n\n**Objetivo**\n- Crear las imagenes rasters para cada caso expresando como atributo el cambio\nporcentual semanal y prepandemia.\n\n---\n\n## Paquete `quadkeyr`\n\nLos pasos que se describen aquí se encuentran detallados en [la viñeta del \npaquete `quadkeyr`](https://fernandez-lab-wsu.github.io/quadkeyr/articles/create_rasters_from_grid.html) que fue especificamente creado para la creación de los\nrasters.\n\n\n## 1. Leo los archivos\n\nEsta función me reporta los archivos faltantes en la serie de días y horarios.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- read_all_files(path_to_csvs = \"../geocovid/data/rasters/\",\n                        colnames = c(\"lat\", \"lon\", \n                                     \"quadkey\", \"date_time\", \n                                     \"n_crisis\", \"percent_change\"),\n                        coltypes = list(\n                         lat = 'd',\n                         lon = 'd',\n                         quadkey = 'i',\n                         date_time = 'T',\n                         n_crisis = 'c',\n                         percent_change = 'c')) \n\nfiles\n```\n:::\n\n\nPor ejemplo, estos fueron los faltantes para los datos de AMBA:\n\n```\nday time\n1  2020-07-03    0\n2  2020-07-04    0\n3  2020-07-05    0\n4  2020-07-06    0\n5  2020-07-07    0\n6  2020-07-08    0\n7  2020-07-09    0\n8  2020-07-10    0\n9  2020-07-11    0\n10 2020-07-12    0\n11 2020-09-12    0\n12 2020-09-13    0\n13 2020-07-03    8\n14 2020-07-04    8\n15 2020-07-05    8\n16 2020-07-06    8\n17 2020-07-07    8\n18 2020-07-08    8\n19 2020-07-09    8\n20 2020-07-10    8\n21 2020-07-11    8\n22 2020-07-12    8\n23 2020-09-12    8\n24 2020-09-13    8\n25 2020-07-03   16\n26 2020-07-04   16\n27 2020-07-05   16\n28 2020-07-06   16\n29 2020-07-07   16\n30 2020-07-08   16\n31 2020-07-09   16\n32 2020-07-10   16\n33 2020-07-11   16\n34 2020-09-12   16\n```\n\n## 2. Convierto los QuadKeys en coordenadas del mapa\n\n- Tomo todos los QuadKeys que fueron reportados al menos una vez en mi lista de \n archivos `.csv` y los convierto en latitud y longitud.\n\n- Este punto representa la ubicación del vértice de arriba a la izquierda \nde cada QuadKey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquadkeys <-  unique(files$quadkey)\n\nqtll <- quadkey_to_latlong(quadkeys = quadkeys)\n```\n:::\n\n\n## 3. Completar la grilla de QuadKeys\n\n- Si bien un gran número de QuadKeys que son siempre reportados en todos los \narchivos, esto no es una constante.\n\n- La función `regular_qk_grid` permite completar la grilla. Esta función\ndevuelve una lista con 3 elementos: `data`, `num_rows` y `num_cols`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregular_grid <- regular_qk_grid(qtll)\nregular_grid\n```\n:::\n\n\n\n## 4. Crear los polígonos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolygrid <- grid_to_polygon(regular_grid$data)\n```\n:::\n\n\n## 5. Generar los rasters para las variables de interés\n\nLa función `apply_weekly_lag()` permite generar los datos de cambio porcentual\nsemanal creando un lag de 7 días.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolyvar <- files |>\n            dplyr::inner_join(polygrid, by = 'quadkey' ) |>\n            apply_weekly_lag() \n\npolyvar7 <-  polyvar |>\n               drop_na(percent_change_7)\n```\n:::\n\n\nLoas imagenes raster se crearan automaticamente para todos los archivos en la\ncarpeta con el formato `<nombre>_<fecha>_<hora>.tif`. La función \n`polygon_to_raster` va a crear los raster incluso si hay algún archivo de la \nserie faltante.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# cambio porcentual prepandemia\npolygon_to_raster(data = polyvar,\n                  nx = grid$num_cols +1 ,\n                  ny = grid$num_rows +1 ,\n                  template = polyvar,\n                  variable = 'percent_change',\n                  filename = 'Baires',\n                  path = \"data/\"\n                  )\n\n# cambio porcentual semanal\npolygon_to_raster(data = polyvar7,\n                  nx = grid$num_cols +1 ,\n                  ny = grid$num_rows +1 ,\n                  template = polyvar7,\n                  variable = 'percent_change_7',\n                  filename = 'Baires',\n                  path = \"data/\"\n                  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "d9a3dd34e1ead968ca9408672ca3280c",
  "result": {
    "markdown": "---\ntitle: \"Creación de imagenes raster\"\nlang: es\n---\n\n\n---\n\n**Input inicial**\n- Archivos `.csv` con datos de movilidad ciudadana expresados por QuadKeys.\nExiste un archivo por locación y horario reportado.\n\n**Objetivo**\n- Crear las imagenes rasters para cada caso expresando como atributo el cambio\nporcentual semanal y prepandemia.\n\n---\n\n## Paquete `quadkeyr`\n\nLos pasos que se describen aquí se encuentran detallados en [la viñeta del \npaquete `quadkeyr`](https://fernandez-lab-wsu.github.io/quadkeyr/articles/create_rasters_from_grid.html)\nque fue especificamente creado para la creación de los rasters.\n\n## 1. Leo los archivos\n\nEsta función me reporta los archivos faltantes en la serie de días y horarios.\n\n### Buenos Aires\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  library(quadkeyr)\n  \n  files <- quadkeyr::read_fb_mobility_files(\n    path_to_csvs = \"../Desktop/Facebook data/BsAs_facebookpop/\",\n    colnames = c(\n      \"lat\",\n      \"lon\",\n      \"quadkey\",\n      \"date_time\",\n      \"n_crisis\",\n      \"percent_change\"\n    ),\n    coltypes = list(\n      lat = 'd',\n      lon = 'd',\n      quadkey = 'c',\n      date_time = 'T',\n      n_crisis = 'c',\n      percent_change = 'c'\n    )\n  )\n```\n:::\n\n\nPor ejemplo, estos fueron los faltantes para los datos de AMBA:\n\n```\nday time\n1  2020-07-03    0\n2  2020-07-04    0\n3  2020-07-05    0\n4  2020-07-06    0\n5  2020-07-07    0\n6  2020-07-08    0\n7  2020-07-09    0\n8  2020-07-10    0\n9  2020-07-11    0\n10 2020-07-12    0\n11 2020-09-12    0\n12 2020-09-13    0\n13 2020-07-03    8\n14 2020-07-04    8\n15 2020-07-05    8\n16 2020-07-06    8\n17 2020-07-07    8\n18 2020-07-08    8\n19 2020-07-09    8\n20 2020-07-10    8\n21 2020-07-11    8\n22 2020-07-12    8\n23 2020-09-12    8\n24 2020-09-13    8\n25 2020-07-03   16\n26 2020-07-04   16\n27 2020-07-05   16\n28 2020-07-06   16\n29 2020-07-07   16\n30 2020-07-08   16\n31 2020-07-09   16\n32 2020-07-10   16\n33 2020-07-11   16\n34 2020-09-12   16\n```\n\n## 2. Convierto los QuadKeys en coordenadas del mapa\n\n- Tomo todos los QuadKeys que fueron reportados al menos una vez en mi lista de \n archivos `.csv` y los convierto en latitud y longitud.\n\n- Este punto representa la ubicación del vértice de arriba a la izquierda \nde cada QuadKey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  regular_grid <- quadkeyr::get_regular_polygon_grid(data = files)\n  files_polygons <- files |> \n    dplyr::inner_join(regular_grid$data, \n                          by = c(\"quadkey\")) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n    # Generate the raster files                       \n  quadkeyr::polygon_to_raster(data = files_polygons,\n                    nx = regular_grid$num_cols,\n                    ny = regular_grid$num_rows,\n                    template = files_polygons,\n                    var = 'percent_change',\n                    filename = 'BuenosAires',\n                    path = \"../Desktop/Facebook data/rasters_baires/\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n  # 7 days\n  files_polygons_7 <- files_polygons |>\n    apply_weekly_lag()\n  \n  # Generate the raster files                       \n  quadkeyr::polygon_to_raster(data = files_polygons,\n                    nx = regular_grid$num_cols,\n                    ny = regular_grid$num_rows,\n                    template = files_polygons,\n                    var = 'percent_change',\n                    filename = 'BuenosAires',\n                    path = \"../Desktop/Facebook data/rasters_baires/\")\n```\n:::\n\n\n\n## 3. Completar la grilla de QuadKeys\n\n- Si bien un gran número de QuadKeys que son siempre reportados en todos los \narchivos, esto no es una constante.\n\n- La función `regular_qk_grid` permite completar la grilla. Esta función\ndevuelve una lista con 3 elementos: `data`, `num_rows` y `num_cols`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregular_grid <- regular_qk_grid(qtll)\nregular_grid\n```\n:::\n\n\n\n## 4. Crear los polígonos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolygrid <- grid_to_polygon(regular_grid$data)\n```\n:::\n\n\n## 5. Generar los rasters para las variables de interés\n\nLa función `apply_weekly_lag()` permite generar los datos de cambio porcentual\nsemanal creando un lag de 7 días.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npolyvar <- files |>\n            dplyr::inner_join(polygrid, by = 'quadkey' ) |>\n            apply_weekly_lag() \n\npolyvar7 <-  polyvar |>\n               drop_na(percent_change_7)\n```\n:::\n\n\nLoas imagenes raster se crearan automaticamente para todos los archivos en la\ncarpeta con el formato `<nombre>_<fecha>_<hora>.tif`. La función \n`polygon_to_raster` va a crear los raster incluso si hay algún archivo de la \nserie faltante.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# cambio porcentual prepandemia\npolygon_to_raster(data = polyvar,\n                  nx = grid$num_cols +1 ,\n                  ny = grid$num_rows +1 ,\n                  template = polyvar,\n                  variable = 'percent_change',\n                  filename = 'Baires',\n                  path = \"data/\"\n                  )\n\n# cambio porcentual semanal\npolygon_to_raster(data = polyvar7,\n                  nx = grid$num_cols +1 ,\n                  ny = grid$num_rows +1 ,\n                  template = polyvar7,\n                  variable = 'percent_change_7',\n                  filename = 'Baires',\n                  path = \"data/\"\n                  )\n```\n:::\n\n \n### AMBA\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quadkeyr)\n\nfiles <- quadkeyr::read_fb_mobility_files(\n  path_to_csvs = \"../../Desktop/Facebook data/AMBA_facebookpop/\",\n  keep_format = \"country\",\n  colnames = c(\n    \"lat\",\n    \"lon\",\n    \"quadkey\",\n    \"country\",\n    \"date_time\",\n    \"n_crisis\",\n    \"percent_change\"\n  ),\n  coltypes = list(\n    lat = 'd',\n    lon = 'd',\n    quadkey = 'c',\n    country = 'c',\n    date_time = 'T',\n    n_crisis = 'c',\n    percent_change = 'c'\n  )\n)\n```\n:::\n\n\nAparentemente hay algunos quadkeys problemáticos porque tienen errores,\nlos elimino.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remuevo los datos problematicos.\nerror_scinot <- subset(files, \n                       quadkey == \"2.10321E+15     \")\n\n# Aparece un error, de un numero que no pudo ser convertido a quadkey,\n# lo separo y lo guardo\n\nwrite.csv(error_scinot, \n          \"data/remove_quadkeys_amba.csv\")\n\n# dejo solo los quadkeys reportados para argentina\n# asi remuevo otros que aparecen para uruguay o en el mar\nfiles = subset(files,\n               country == 'AR')\n# remuevo los datos problematicos.\nfiles = subset(files, \n               quadkey != \"2.10321E+15     \")\n```\n:::\n\n\nObtengo la grilla con los QuadKeys\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\namba <- st_read('data/amba_reducido.gpkg')\n\njoined_data <- st_join(regular_grid$data,\n                       amba,\n                       left = FALSE)\n\nfiles_polygons <- files |> \n  dplyr::inner_join(joined_data, \n                    by = c(\"quadkey\")) \n\nregular_grid <- get_regular_polygon_grid(data = files)\nregular_grid\n```\n:::\n\n\nCargo el mapa vectorial de AMBA y dejo solo los polígonos que estan incluidos.\n\nEn `joined_data` tengo los polígonos incluidos en AMBA\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate the raster files                       \npolygon_to_raster(data = files_polygons,\n                  nx = regular_grid$num_cols,\n                  ny = regular_grid$num_rows,\n                  template = files_polygons,\n                  var = 'percent_change',\n                  filename = 'AMBA',\n                  path = \"rasters_amba/\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7 days\nfiles_polygons_7 <- files_polygons |>\n  apply_weekly_lag()\n\n# Generate the raster files                       \npolygon_to_raster(data = files_polygons_7,\n                  nx = regular_grid$num_cols,\n                  ny = regular_grid$num_rows,\n                  template = files_polygons_7,\n                  var = 'percent_change_7',\n                  filename = 'AMBA7',\n                  path = \"../Desktop/Facebook data/rasters_amba/\")\n```\n:::\n\n\n## Subida de los archivos a PostgreSQL\n\nExtraido de https://sysadminguides.org/2017/05/02/how-to-pass-credentials-in-powershell/\n\n```\n # Configurar la variable PGPASSWORD en la terminal antes de correr\n$env:PGPASSWORD = \"####\"\n\n# Append postrgres to path\n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\bin\" \n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\lib\" \n$env:PATH += \";C:\\Program Files\\PostgreSQL\\16\\share\\contrib\\postgis-3.4\\proj\\proj.db\"\n\n# Database connection parameters\n$DBNAME=\"geocovidapp_db\"\n$USER=\"####\"\n$PORT=\"####\"\n\n$PGPASSWORD\n\n# Define variables\n$RASTER_DIRECTORY = \"C:\\Users\\florencia\\Documents\\rasters\\rasters_amba\\amba_pc\\\"\n$RASTER_FILES = Get-ChildItem -Path $RASTER_DIRECTORY -Filter \"*.tif\"\n$RASTER_FULLPATH = Get-ChildItem -Path $RASTER_DIRECTORY -Filter \"*.tif\" | ForEach-Object {Join-Path -Path $RASTER_DIRECTORY -ChildPath $_.Name}\n\n# Loop through raster files\nforeach ($RASTER_FILE in $RASTER_FULLPATH) {\n    # Get raster file name without path and extension\n    $RASTER_NAME = [System.IO.Path]::GetFileNameWithoutExtension($RASTER_FILE)\n\n    # Insert raster data into PostGIS table\n\n    raster2pgsql -a -s 4326 -I -F $RASTER_FILE raster_schema.rasters | psql -d $DBNAME -U $USER -p $PORT \n\n    # Optional: Add metadata to the inserted record\n    # psql -d $DBNAME -U $USER -p $PORT -c \"UPDATE SET filename = 'Raster $RASTER_NAME', description = 'Description for $RASTER_NAME' WHERE rast ~* '$RASTER_NAME';\"\n}\n \n```\n\nClick izquierdo en el archivo y selecciono `run with PowerShell` \n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
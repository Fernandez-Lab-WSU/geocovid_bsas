{
  "hash": "dc5cefdde1c619e748877763bfacfc06",
  "result": {
    "markdown": "---\ntitle: \"Creación Mapas Buenos Aires\"\nlang: es\n---\n\n\n---\n\n**Datos iniciales:**\n- Mapas vectoriales de Buenos Aires y AMBA.\n\n**Se busca obtener:**\n- Mapas vectoriales de Buenos Aires y AMBA de menor tamaño.\n- Una opción de mapa de Buenos Aires sin las comunas de CABA.\n- Centroides de los departamentos de provincia de Buenos Aires.\n\n---\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n:::\n:::\n\n\n\n## Area Metropolitana de Buenos Aires (AMBA) y Ciudad Autonoma de Buenos Aires (CABA)\n\nEl AMBA consta de 40 municipios mas ciudad de buenos aires. Vamos a hacer una seleccion de amba con menos partidos.\nfuente: https://www.argentina.gob.ar/dami/centro/amba\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Lista de los partidos que vamos a considerar AMBA incluyendo comunas CABA\namba_reducido_names <- c('Almirante Brown',\n                         'Avellaneda',\n                         'Berazategui',\n                         paste('Comuna', 1:15), # CABA\n                         'Esteban Echeverría', 'Escobar', 'Ezeiza',\n                         'Florencio Varela',\n                         'General San Martín',\n                         'Hurlingham',\n                         'Ituzaingó',\n                         'José C. Paz',\n                         'La Matanza',  'Lanús', 'Lomas de Zamora',\n                         'Malvinas Argentinas', 'Merlo', 'Moreno', 'Morón',\n                         'Quilmes', 'Pilar', 'Presidente Perón',\n                         'San Fernando', 'San Isidro', 'San Miguel',\n                         'Tigre', 'Tres de Febrero',\n                         'Vicente López')\n\n# Estos shapefiles fueron extraidos del Instituto Geografico Nacional (IGN)\n\namba <- st_read(\"data/inicial/departamentos.shp\") |>\n  st_zm() |>\n  filter(str_detect(NAM, paste(amba_reducido_names, collapse = \"|\")),\n         SAG %in% c('ARBA - Gerencia de Servicios Catastrales',\n                    'Direc. de Catastro'))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `departamentos' from data source \n  `/Users/florenciadandrea/geocovid_bsas/data/inicial/departamentos.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 529 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: -74 ymin: -90 xmax: -25 ymax: -21.78113\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\n# Chequeo el resultado visualmente\namba_reducido <- amba |>\n  dplyr::select('partido' = NAM , geometry) |>\n  dplyr::filter(partido %in% amba_reducido_names)\n\nggplot() +\n  geom_sf(data = amba_reducido)+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n### Elimino polígono fuera del área de análisis\n\nEl partido de San Fernando esta compuesto por dos polígonos, pero solo\nusaremos el que no es parte del Delta.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Visualizo el partido\nggplot() +\n  geom_sf(data = subset(amba_reducido,\n                        partido == 'San Fernando'))+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Fuerzo el pasaje a POLYGON, esto lo va a partir en dos filas\namba_reducido = st_cast(amba_reducido,\"POLYGON\")\n\n# Chequeo que se cual quiero eliminar\nggplot() +\n  geom_sf(data = amba_reducido$geom[30])+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Elimino el poligono extra\namba_reducido <- amba_reducido[-30,]\n\n# Archivo vectorial final de AMBA\nggplot() +\n  geom_sf(data = amba_reducido)+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n:::\n\n\n\nEste es el archivo con los poligonos finales seleccionados para AMBA\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## guardo el archivo\n\nst_write(amba, \"data/procesada/amba_ampliado.gpkg\", append = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDeleting layer `amba_ampliado' using driver `GPKG'\nWriting layer `amba_ampliado' to data source \n  `data/procesada/amba_ampliado.gpkg' using driver `GPKG'\nWriting 42 features with 10 fields and geometry type Multi Polygon.\n```\n:::\n:::\n\n\n## Provincia de Buenos Aires\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Obtengo los poligonos desde el IGN\nbsas <- sf::st_read('data/inicial/departamentos.shp') |>\n  dplyr::filter(SAG %in% c('Direc. de Catastro', # comunas\n                           'ARBA - Gerencia de Servicios Catastrales'), # partidos de baires\n                GNA %in% c('Partido', 'Comuna')) |> # elimino prov de san juan\n  dplyr::select('partido' = NAM, geometry) |>\n  sf::st_zm()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `departamentos' from data source \n  `/Users/florenciadandrea/geocovid_bsas/data/inicial/departamentos.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 529 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: -74 ymin: -90 xmax: -25 ymax: -21.78113\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\n# Lo paso a poligono para eliminar el extra en San Fernando\nbsas = st_cast(bsas,\"POLYGON\")\n\n# Chequeo el numero de poligono que quiero eliminar\nggplot() +\n  geom_sf(data = bsas$geometry[126])+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Elimino el poligono extra\nbsas <- bsas[-126,]\n\n# Mapa final\nggplot() +\n  geom_sf(data = bsas)+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\nwrite_sf(bsas, 'data/procesada/bsas.gpkg')\n```\n:::\n\n\n### Unifico las comunas de Capital Federal\n\nNo en todos los casos usaremos las comunas, asique creo archivos que no las \nposean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # uno las comunas\n  caba <-  bsas[grep(\"Comuna\", bsas$partido), ] |>\n           st_union()\n\n  # aca podria agregar algun tipo de control de calidad para asegurarme que\n  # tengo la cantidad de comunas que son\n  # chequear que tenga proyeccion\n\n\n  # las reemplazo en el dataset por caba\n bsas_caba <-  bsas |>\n    slice(-grep(\"Comuna\", bsas$partido)) |>\n    rbind(st_sf(\n                geometry = caba,\n                partido = 'Capital Federal'\n    ))\n\n\n\n ggplot() +\n        geom_sf(data = subset(bsas_caba,\n                              partido == 'Capital Federal')) + \n        theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nwrite_sf(bsas_caba, 'data/procesada/bsas_caba.gpkg')\n```\n:::\n\n\n### Simplifico los poligonos para agilizar la app\n\nEs posible emplear la funcion `sf::st_simplify` con este mismo fin, \npero no conserva tan bien la topografia entre los poligonos, \nes por ello que uso este paquete donde se aplica el algoritmo de Visvalingam.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbsas_caba <- st_read('data/procesada/bsas_caba.gpkg')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `bsas_caba' from data source \n  `/Users/florenciadandrea/geocovid_bsas/data/procesada/bsas_caba.gpkg' \n  using driver `GPKG'\nSimple feature collection with 136 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -63.38597 ymin: -41.03791 xmax: -56.66499 ymax: -33.26185\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nlibrary(rmapshaper)\nbsas_caba_simple <- rmapshaper::ms_simplify(bsas_caba)\n\nst_write(bsas_caba_simple, \"data/procesada/bsas_caba_simple.gpkg\", append=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDeleting layer `bsas_caba_simple' using driver `GPKG'\nWriting layer `bsas_caba_simple' to data source \n  `data/procesada/bsas_caba_simple.gpkg' using driver `GPKG'\nWriting 136 features with 1 fields and geometry type Polygon.\n```\n:::\n:::\n\n\n\n### Calculo de centroides\n\nUso la función `sf::st_point_on_surface()` que evita que el centroide caiga\nfuera del polígono si este tiene forma irregular.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncent <- bsas_caba_simple |> \n  st_point_on_surface()\n\n# guardo el archivo con los vectores de partidos de provincia de Buenos Aires\n\nggplot() +\n  geom_sf(data = bsas_caba)+\n  geom_sf(data = cent) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](creacion_mapa_bsas_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# guardo los centroides\nst_write(cent, \"data/procesada/centroides_mapa.gpkg\", append=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDeleting layer `centroides_mapa' using driver `GPKG'\nWriting layer `centroides_mapa' to data source \n  `data/procesada/centroides_mapa.gpkg' using driver `GPKG'\nWriting 136 features with 1 fields and geometry type Point.\n```\n:::\n:::\n",
    "supporting": [
      "creacion_mapa_bsas_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
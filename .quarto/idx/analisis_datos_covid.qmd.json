{"title":"Análisis de datos de COVID-19","markdown":{"yaml":{"title":"Análisis de datos de COVID-19","lang":"es"},"headingText":"Leo el archivo como csv.","containsRefs":false,"markdown":"\n\n```{r setup, echo=FALSE}\n\nknitr::opts_chunk$set(warning = FALSE, echo = TRUE)\n\nlibrary(arrow)\nlibrary(tidyverse) # ggplot2, forcats\nlibrary(lubridate)\nlibrary(sf)\nlibrary(knitr)\nlibrary(terra)\nlibrary(stars)\nlibrary(plotly)\n\ntheme_set(theme_bw())\n\n```\n\n\n---\n\n**Datos iniciales:**\n- Casos de COVID-19 en formato `.csv`.\n\n**Se busca obtener:**\n- Una base de datos limpia para emplear en GeoCovid app.\n\n---\n\n```{r include = TRUE, eval = FALSE}\n\n# Esta en Dropbox ya que es bastante grande.\ncovid_data <- arrow::open_dataset(\"data/inicial/Covid19Casos.csv\", \n                           format = 'csv')\n\n# Elijo que datos voy a descargar usando dplyr. \n# Los datos no se bajan hasta que uso collect()\n\n\ncovid_casos_muestra <- covid_data |> \n  filter(clasificacion_resumen != 'Descartado',\n         carga_provincia_nombre %in% c('CABA', 'Buenos Aires') |    residencia_provincia_nombre %in% c('CABA', 'Buenos Aires')) |>\n  select(id_evento_caso,\n          edad, edad_años_meses, sexo,\n          carga_provincia_nombre,\n          residencia_pais_nombre,\n          residencia_provincia_nombre,\n          residencia_departamento_nombre,\n          fecha_inicio_sintomas, \n          fecha_diagnostico, \n          fecha_internacion,\n          fecha_cui_intensivo,\n          fecha_fallecimiento,\n          clasificacion, \n          clasificacion_resumen) |> \n  collect()\n\n\nwrite_parquet(covid_casos_muestra, \"data/inicial/covid_casos_baires.parquet\")\n\n```\n\nSi el archivo a sido bien guardado deberia poder leerse:\n\n```{r}\n\ncovid_casos_muestra <- read_parquet(\"data/inicial/covid_casos_baires.parquet\")\nstr(covid_casos_muestra)\n```\n\nEn total, el dataset presenta información para\n`r nrow(covid_casos_muestra |> count(id_evento_caso))` casos diferentes. \nLas variables disponibles se encuentran descriptas en @tbl-vars de acuerdo \na la información obtenida desde fuentes oficiales. De ellas fueron elegidas un porcentaje.\n\nEsto va a aplicar a ambos subdatasets.\n\n\n|  Titulo de la columna             |    Tipo de dato          |  Descripción                               |  \n|:----------------------------------|:-------------------------|:-------------------------------------------|\n| `id_evento_caso`                  | Número entero (integer)  | Numero de caso                             | \n| `sexo`                            | Texto (string)           | Sexo                                       |  \n| `edad`                            | Número entero (integer)  | Edad                                       |  \n| `edad_años_meses`                 | Texto (string)           | Edad indicada en meses o años              |  \n| `residencia_pais_nombre`          | Texto (string)           | País de residencia                         |   \n| `residencia_provincia_nombre`     | Texto (string)           | Provincia de residencia                    | \n| `residencia_departamento_nombre`  | Texto (string)           | Departamento de residencia                 |  \n| `carga_provincia_nombre`          | Texto (string)           | Provincia de establecimiento de carga      |  \n| `fecha_inicio_sintomas`           | Fecha ISO-8601 (date)    | Fecha de inicio de síntomas                |   \n| `fecha_apertura`                  | Fecha ISO-8601 (date)    | Fecha de apertura del caso                 |  \n| `sepi_apertura`                   | Número entero (integer)  | Semana Epidemiológica de fecha de apertura |   \n| `fecha_internacion`               | Fecha ISO-8601 (date)    | Fecha de internación                       | \n| `cuidado_intensivo`               | Fecha ISO-8601 (date)    | Fecha de ingreso a cuidado intensivo en el caso de corresponder |  \n| `fallecido`                       | Texto (string)           | Indicación de fallecido                    |  \n| `fecha_fallecimiento`             | Fecha ISO-8601 (date)    | Fecha de fallecimiento                     |  \n| `asistencia_respiratoria_mecanica`| Texto (string)           | Indicación si requirió asistencia respiratoria mecánica |   \n| `carga_provincia_id`              | Número entero (integer)  | Código de Provincia de carga               |  \n| `origen_financiamiento`           | Texto (string)           | Origen de financiamiento                   |\n| `clasificacion`                   | Texto (string)           | Clasificación manual del registro          |\n| `clasificacion_resumen`           | Texto (string)           | Clasificación del caso                     |\n| `residencia_provincia_id`         | Número entero (integer)  | Código de Provincia de residencia          |\n| `fecha_diagnostico`               | Tiempo ISO-8601 (time)   | Fecha de diagnóstico                       |\n| `residencia_departamento_id`      | Número entero (integer)  | Código de Departamento de residencia       |\n| `ultima_actualizacion`            | Fecha ISO-8601 (date)    | Fecha de última actualización                       |\n\n: Variables provistas en el dataset de la Dirección Nacional de Epidemiología y Análisis de Situación de Salud {#tbl-vars} \n\n\n**Datos faltantes**\n\n`fecha_apertura` (variable descartada) es la unica variable que reporta una \nfecha para todas las observaciones. `fecha_diagnostico` y \n`fecha_inicio_sintomas` NO PRESENTAN datos para todas las observaciones. \n\n```{r}\nsummary(covid_casos_muestra)\n```\n\n**Defino periodo de análisis**\n\nA partir del 18/04/2022 el archivo de Casos de COVID registrados en la República Argentina pasa a tener una frecuencia de actualización semanal, los días domingo.\n\nDebido a esto, el periodo que se seleccionara para esta análisis será desde\nMarzo de 2020 a Marzo de 2022.\n\n```{r}\n\n\n# periodo de analisis\ncovid_inicio <- ymd(\"2020-03-01\")\ncovid_final <- ymd(\"2020-12-31\")\n\nperiodo <- function(x) {\n  covid_inicio <= x & covid_final >= x\n}\n\n# considero solo los casos para el periodo de analisis      \ncovid_casos_muestra <-  covid_casos_muestra |> \n  filter(if_all(starts_with('fecha_'),\n               ~ is.na(.x) | covid_inicio <= .x & covid_final >= .x))     \n              \n\n# chequeo que los valores max y min esten dentro de mi rango de analisis\ncovid_casos_muestra |> \n  select(starts_with('fecha_')) |> \n  pivot_longer(1:5, \n               names_to = 'names',\n               values_to = 'values') |> \n             group_by(names) |> \n             summarize(min = min(values, na.rm = TRUE),\n                       max = max(values, na.rm = TRUE))\n\n```\n\n##### Cantidad de casos\n\nLa cantidad de casos esta evidenciada por la cantidad de observaciones en\nlas variables relacionadas con la fecha.\n\n* `fecha_diagnostico` y `fecha_inicio_sintomas` son las variables con mayor \nnumero de observaciones.\n\n* `fecha_cui_intensivo` presenta menor cantidad de observaciones que \n`fecha_fallecido`. Esto podria ser por falta de datos o por muertes que se \ndieron sin llegar a internación.\n\n```{r}\nobs_fechas <- covid_casos_muestra |> \n  select(starts_with('fecha_')) |> \n  pivot_longer(1:5,\n               names_to = 'names',\n               values_to = 'values'\n                ) |> \n  group_by(names) |> \n  summarize(n = sum(!is.na(values))) \n\n\n  ggplot(obs_fechas) +\n  geom_col(aes(x = fct_reorder(names, n),\n           y = n),\n           fill = viridis::magma(3)[2]) +\n    theme_minimal() +\n    coord_flip() + \n    xlab('Variables') +\n    ylab('Cantidad de observaciones')\n    \n```\n\n### Total de casos para CABA y Buenos Aires por variable `clasificación`\n\n```{r}\n#| out.width: 550\n\n covid_casos_muestra |> \n  filter(carga_provincia_nombre %in% c('CABA', 'Buenos Aires')) |> # este filtro tiene sentido porque considere los casos de residentes en caba y baires que fueron cargados en otras provincias tambien\n  select(-1) |> \n  count(carga_provincia_nombre, clasificacion_resumen) |> \n  ggplot() +\n  geom_col(aes(x = carga_provincia_nombre,\n               y = n,\n               fill = clasificacion_resumen)) +\n  scale_fill_viridis_d(option = \"B\") +\n  theme_minimal() +\n  xlab('carga_provincia_nombre') +\n  ylab('Cantidad de observaciones')\n  \n  \n```\n\n\n\n### Reporte de fecha de enfermedad\n\nCuento la cantidad de NA de las posibles combinaciones en la cantidad de veces que `fecha_inicio_sintomas` y `fecha_diagnostico` para cada observación.\n\n```{r}\n\n\ncase_both_na <- sum(is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico))\n\ncase_sintomas_na <- sum(is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) \n\ncase_diagnostico_na <- sum(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) \n\ncase_both_filled <- sum(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico))\n\n# Creo una tabla\ntable_data <- data.frame(casos = c(\"ambas_columnas_na\", \"fecha_inicio_sintomas_na\", \n                                   \"fecha_diagnostico_na\",\"ambas_columnas_completas\"),\n                         obs = c(case_both_na, case_sintomas_na,\n                                   case_diagnostico_na, case_both_filled)\n) |> \n  mutate(porcentaje = round((100*obs)/nrow(covid_casos_muestra), \n                            digit = 1))\n\n# chequeo que la cantidad de valores reportados en la tabla\n# equivale al total de observaciones\nif(\nsum(table_data$obs) == nrow(covid_casos_muestra)\n  ){\nkable(table_data)\n\n}else(\"La cantidad de valores reportados en la tabla no coincide con el total\")\n\n\n\n```\n\n\n####  CASO 1: fecha de inicio de sintomas y fecha de diagnostico no reportadas\n\nEsto es el `r round((100*table_data[table_data$casos == 'ambas_columnas_na', 'obs'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nLa mayoria de estos casos son `sospechosos` (analizados por laboratorio) o en\nmenor medida `probables` (analizados por autotest). Es posible que sean casos \nque o dieron falsos positivos o que las muestras fueron no aptas para el \nanalisis por algun motivo. \n\n```{r}\n#| fig-cap: 'Fecha de inicio de sintomas y de diagnostico no reportadas. Se observa que la mayoria de los casos sospechosos de la base de datos se encuentran dentro de esta categoria'\n\n\ncovid_casos_muestra |> \n  filter(is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n\n```\n####  CASO 2: fecha de inicio de sintomas reportada y fecha de diagnostico ausente\n\nEsto es el `r round((100*table_data[table_data$casos == 'fecha_inicio_sintomas_na', 'obs'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nLa mayoria de estas observaciones vienen de casos confirmados de COVID-19\nno activos.\n\n```{r}\n#| fig-cap: 'fecha de inicio de sintomas reportada y fecha de diagnostico ausente'\n\n\ncovid_casos_muestra |> \n  filter(is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n```\n\n####  CASO 3: fecha de inicio de sintomas ausente y fecha de diagnostico reportada\n\nEsto es el `r round((100*table_data[table_data$casos == 'fecha_inicio_sintomas_na', 'numero_na'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nEn este caso, en su mayoria son los casos que fueron confirmados por criterio clinico-epidemiologico, pero nunca testeados. A su vez existe un numero de casos\nsospechosos elevado, ya sea sin muestra o con muestar sin resultado concluyente.\n\n```{r}\n#| fig-cap: 'fecha de inicio de sintomas ausente y fecha de diagnostico reportada'\n\n\ncovid_casos_muestra |> \n  filter(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n```\n\n\n####  CASO 4: fecha de inicio de sintomas y fecha de diagnostico reportadas\n\nEsto es el `r round((100*table_data[table_data$casos == 'ambas_columnas_completas', 'obs'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nEn este caso, en su mayoría son los casos que fueron confirmados por laboratorio.\n\n```{r}\n#| fig-cap: 'Fecha de inicio de sintomas y fecha de diagnostico reportadas.'\n\n\ncovid_casos_muestra |> \n  filter(!is.na(covid_casos_muestra$fecha_inicio_sintomas) &   !is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n\n\n```\n\n### Criterios de descarte de datos \n\n**1. Diferencia entre fecha de inicio sintomas y diagnostico para CASO 4**\n\n\n```{r}\n\ndif_dias_total_casos <- covid_casos_muestra |> \n  dplyr::filter(carga_provincia_nombre %in% c('CABA', 'Buenos Aires')) |> # lo hago por fecha de carga para ver si hay alguna diferencia en la juridiccion\n  mutate(dias_caso = as.numeric(difftime(fecha_diagnostico, # time1\n                                         fecha_inicio_sintomas, # time2\n                                         units=\"days\"))) # logica: time1 - time2\n\ndif_dias <- dif_dias_total_casos |> \n   dplyr::filter(!is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico))  # CASO 4\n\n```\n\nLos casos tienen un rango que va del positivo al negativo\n\n```{r}\nrange(dif_dias$dias_caso)\n```\n\n\n**Que significa que sea negativa esta diferencia?**\n\nCreo que es posible que se diagnostique el caso antes que aparezcan los síntomas.\nVeamos un poco los datos extremos.\n\n```{r}\ndif_dias |> \n  filter(dias_caso > 30 | dias_caso < -30) |> # elegi 30 dias arbitrariamente\n  select(starts_with('fecha_'), dias_caso)\n```\n\nSi grafico, observo que la gran mayoria de los casos cae entre 0 a 10 dias.\n\n```{r}\n\ndif_dias_total_casos <- dif_dias |> \n  filter(dias_caso < 25,\n         dias_caso > -5) \n\nggplotly(\n  dif_dias_total_casos |> \n  group_by(dias_caso, carga_provincia_nombre) |> \n  count() |> \n  ggplot(aes(x = dias_caso,\n             y = n,\n             fill = carga_provincia_nombre\n             )\n        )+\n  geom_col() +\n  scale_fill_viridis_d()+\n  theme_minimal()+\n  xlab('Diferencia entre fecha_diagnostico y fecha_inicio_sintomas') +\n  ylab('Cantidad de observaciones')\n\n)\n\n\n  \n\n```\n\nNo se observa que esta diferencia de dias varie en relación al departamento,\nni para CABA ni para Buenos Aires (datos no mostrados en este reporte).\n\nSe conservaron todos los casos donde la diferencia entre las fechas de síntoma \ny diagnóstico estuvo entre 25 y -5 días, con motivo de eliminar datos \nde dificil interpretación.\n\n### Homogenizacion de las variables `fecha_inicio_sintomas` y `fecha_diagnostico`\n\nPara poder visualizar estos datos en relación a los datos de movilidad ciudadana\nes relevante poder asociar cada observación a una fecha de inicio/diagnóstico \npara cada individuo infectado.\n\nSe crea entonces una nueva variable llamada `fecha_enfermo` en base a las \nsiguientes decisiones por caso resumidas en @tbl-desicion:\n\n\n\n|Caso |    Descripcion                                                 |   `fecha_enfermo`                              |  \n|:--|:-----------------------------------------------------------------|:---------------------------------------|\n| 1 | `fecha_inicio_sintomas` y `fecha_diagnostico` no reportadas      | Remover casos                         |   \n| 2 | `fecha_inicio_sintomas` reportada y `fecha_diagnostico` ausente  | Se considera `fecha_inicio_sintomas`       |\n| 3 | `fecha_inicio_sintomas` ausente y `fecha_diagnostico` reportada  | Se considera `fecha_diagnostico`   |\n| 4 | `fecha_inicio_sintomas` y `fecha_diagnostico` reportadas         | Conservar `fecha_inicio_sintoma`|  \n\n: Desiciones para la creación de la variable `fecha_enfermo` {#tbl-desicion}\n\n\n```{r}\n\n# trabajo sobre la base donde ya elimine las observaciones por diferencia\n# de dias\n\nbase_covid_completa <- dif_dias_total_casos |> \n                          mutate(fecha_enfermo = case_when(\n                             # CASO 1\n                                   is.na(fecha_inicio_sintomas) & is.na(fecha_diagnostico) ~ NA_character_,\n                             # CASO 2\n                                   !is.na(fecha_inicio_sintomas) & is.na(fecha_diagnostico) ~ as.character(fecha_inicio_sintomas),\n                             # CASO 3\n                                   is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico) ~ as.character(fecha_diagnostico),\n                             # CASO 4 \n                                   !is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico) ~ as.character(fecha_inicio_sintomas) \n                                  ))\n\n# Remuevo caso 1\nbase_covid_completa <- base_covid_completa |> \n                          drop_na(fecha_enfermo) # remuevo el caso 1\n\n\n```\n\n\n## Datos para usar en geocovid app\n\nComo la cantidad de datos de movilidad que tenemos, llegan hasta diciembre de \n2020, acortamos los datos.\n\nSe guarda este dataset para usar en la app.\n\n```{r}\n\nbase_covid_completa <- base_covid_completa |> \n  dplyr::filter(fecha_enfermo >= \"2020-03-01\" & \n                  \"2020-12-31\" >= fecha_enfermo) |>\n  # realizo cambios en el formato de los nombres para homogenizar datos\n  dplyr::mutate(residencia_departamento_nombre = stringr::str_to_title(residencia_departamento_nombre),\n                residencia_departamento_nombre = stringr::str_remove(residencia_departamento_nombre, \"0(?!$)\")) |> \n  dplyr::select(-fecha_inicio_sintomas, -fecha_diagnostico)\n\nbase_covid_completa\n\nwrite_parquet(base_covid_completa, \"data/procesada/covid_casos_baires_geocovid.parquet\")\n\n```\n\n\n\n**Otras observaciones**\n\n- La cantidad de datos *sin especificar* donde fueron registrados \nes mucho mayor para CABA que para provincia de Buenos Aires.\nLos datos de COVID-19 no deberían expresarse por comuna.\n\n- De los gráficos se observa que esposible que haya una menor cantidad de casos\nreportados durante el fin de semana (datos no mostrados)\n\n- Como veiamos en uno de los primeros graficos, la cantidad de valores en \n`fecha_cui_intensivo` no tiene relacion con la cantidad de fallecidos o \ninternaciones por partido.\n\n```{r}\n\nbase_covid_completa |> \n  group_by(residencia_departamento_nombre) |> \n  summarize(sintomas = sum(!is.na(fecha_enfermo)),\n            internacion = sum(!is.na(fecha_internacion)),\n            cui_intensivo = sum(!is.na(fecha_cui_intensivo)),\n            fallecido = sum(!is.na(fecha_fallecimiento)),) |> \n  arrange(desc(fallecido)) |> \n  kable()\n\n```\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n```{r setup, echo=FALSE}\n\nknitr::opts_chunk$set(warning = FALSE, echo = TRUE)\n\nlibrary(arrow)\nlibrary(tidyverse) # ggplot2, forcats\nlibrary(lubridate)\nlibrary(sf)\nlibrary(knitr)\nlibrary(terra)\nlibrary(stars)\nlibrary(plotly)\n\ntheme_set(theme_bw())\n\n```\n\n\n---\n\n**Datos iniciales:**\n- Casos de COVID-19 en formato `.csv`.\n\n**Se busca obtener:**\n- Una base de datos limpia para emplear en GeoCovid app.\n\n---\n\n```{r include = TRUE, eval = FALSE}\n\n# Leo el archivo como csv. \n# Esta en Dropbox ya que es bastante grande.\ncovid_data <- arrow::open_dataset(\"data/inicial/Covid19Casos.csv\", \n                           format = 'csv')\n\n# Elijo que datos voy a descargar usando dplyr. \n# Los datos no se bajan hasta que uso collect()\n\n\ncovid_casos_muestra <- covid_data |> \n  filter(clasificacion_resumen != 'Descartado',\n         carga_provincia_nombre %in% c('CABA', 'Buenos Aires') |    residencia_provincia_nombre %in% c('CABA', 'Buenos Aires')) |>\n  select(id_evento_caso,\n          edad, edad_años_meses, sexo,\n          carga_provincia_nombre,\n          residencia_pais_nombre,\n          residencia_provincia_nombre,\n          residencia_departamento_nombre,\n          fecha_inicio_sintomas, \n          fecha_diagnostico, \n          fecha_internacion,\n          fecha_cui_intensivo,\n          fecha_fallecimiento,\n          clasificacion, \n          clasificacion_resumen) |> \n  collect()\n\n\nwrite_parquet(covid_casos_muestra, \"data/inicial/covid_casos_baires.parquet\")\n\n```\n\nSi el archivo a sido bien guardado deberia poder leerse:\n\n```{r}\n\ncovid_casos_muestra <- read_parquet(\"data/inicial/covid_casos_baires.parquet\")\nstr(covid_casos_muestra)\n```\n\nEn total, el dataset presenta información para\n`r nrow(covid_casos_muestra |> count(id_evento_caso))` casos diferentes. \nLas variables disponibles se encuentran descriptas en @tbl-vars de acuerdo \na la información obtenida desde fuentes oficiales. De ellas fueron elegidas un porcentaje.\n\nEsto va a aplicar a ambos subdatasets.\n\n\n|  Titulo de la columna             |    Tipo de dato          |  Descripción                               |  \n|:----------------------------------|:-------------------------|:-------------------------------------------|\n| `id_evento_caso`                  | Número entero (integer)  | Numero de caso                             | \n| `sexo`                            | Texto (string)           | Sexo                                       |  \n| `edad`                            | Número entero (integer)  | Edad                                       |  \n| `edad_años_meses`                 | Texto (string)           | Edad indicada en meses o años              |  \n| `residencia_pais_nombre`          | Texto (string)           | País de residencia                         |   \n| `residencia_provincia_nombre`     | Texto (string)           | Provincia de residencia                    | \n| `residencia_departamento_nombre`  | Texto (string)           | Departamento de residencia                 |  \n| `carga_provincia_nombre`          | Texto (string)           | Provincia de establecimiento de carga      |  \n| `fecha_inicio_sintomas`           | Fecha ISO-8601 (date)    | Fecha de inicio de síntomas                |   \n| `fecha_apertura`                  | Fecha ISO-8601 (date)    | Fecha de apertura del caso                 |  \n| `sepi_apertura`                   | Número entero (integer)  | Semana Epidemiológica de fecha de apertura |   \n| `fecha_internacion`               | Fecha ISO-8601 (date)    | Fecha de internación                       | \n| `cuidado_intensivo`               | Fecha ISO-8601 (date)    | Fecha de ingreso a cuidado intensivo en el caso de corresponder |  \n| `fallecido`                       | Texto (string)           | Indicación de fallecido                    |  \n| `fecha_fallecimiento`             | Fecha ISO-8601 (date)    | Fecha de fallecimiento                     |  \n| `asistencia_respiratoria_mecanica`| Texto (string)           | Indicación si requirió asistencia respiratoria mecánica |   \n| `carga_provincia_id`              | Número entero (integer)  | Código de Provincia de carga               |  \n| `origen_financiamiento`           | Texto (string)           | Origen de financiamiento                   |\n| `clasificacion`                   | Texto (string)           | Clasificación manual del registro          |\n| `clasificacion_resumen`           | Texto (string)           | Clasificación del caso                     |\n| `residencia_provincia_id`         | Número entero (integer)  | Código de Provincia de residencia          |\n| `fecha_diagnostico`               | Tiempo ISO-8601 (time)   | Fecha de diagnóstico                       |\n| `residencia_departamento_id`      | Número entero (integer)  | Código de Departamento de residencia       |\n| `ultima_actualizacion`            | Fecha ISO-8601 (date)    | Fecha de última actualización                       |\n\n: Variables provistas en el dataset de la Dirección Nacional de Epidemiología y Análisis de Situación de Salud {#tbl-vars} \n\n\n**Datos faltantes**\n\n`fecha_apertura` (variable descartada) es la unica variable que reporta una \nfecha para todas las observaciones. `fecha_diagnostico` y \n`fecha_inicio_sintomas` NO PRESENTAN datos para todas las observaciones. \n\n```{r}\nsummary(covid_casos_muestra)\n```\n\n**Defino periodo de análisis**\n\nA partir del 18/04/2022 el archivo de Casos de COVID registrados en la República Argentina pasa a tener una frecuencia de actualización semanal, los días domingo.\n\nDebido a esto, el periodo que se seleccionara para esta análisis será desde\nMarzo de 2020 a Marzo de 2022.\n\n```{r}\n\n\n# periodo de analisis\ncovid_inicio <- ymd(\"2020-03-01\")\ncovid_final <- ymd(\"2020-12-31\")\n\nperiodo <- function(x) {\n  covid_inicio <= x & covid_final >= x\n}\n\n# considero solo los casos para el periodo de analisis      \ncovid_casos_muestra <-  covid_casos_muestra |> \n  filter(if_all(starts_with('fecha_'),\n               ~ is.na(.x) | covid_inicio <= .x & covid_final >= .x))     \n              \n\n# chequeo que los valores max y min esten dentro de mi rango de analisis\ncovid_casos_muestra |> \n  select(starts_with('fecha_')) |> \n  pivot_longer(1:5, \n               names_to = 'names',\n               values_to = 'values') |> \n             group_by(names) |> \n             summarize(min = min(values, na.rm = TRUE),\n                       max = max(values, na.rm = TRUE))\n\n```\n\n##### Cantidad de casos\n\nLa cantidad de casos esta evidenciada por la cantidad de observaciones en\nlas variables relacionadas con la fecha.\n\n* `fecha_diagnostico` y `fecha_inicio_sintomas` son las variables con mayor \nnumero de observaciones.\n\n* `fecha_cui_intensivo` presenta menor cantidad de observaciones que \n`fecha_fallecido`. Esto podria ser por falta de datos o por muertes que se \ndieron sin llegar a internación.\n\n```{r}\nobs_fechas <- covid_casos_muestra |> \n  select(starts_with('fecha_')) |> \n  pivot_longer(1:5,\n               names_to = 'names',\n               values_to = 'values'\n                ) |> \n  group_by(names) |> \n  summarize(n = sum(!is.na(values))) \n\n\n  ggplot(obs_fechas) +\n  geom_col(aes(x = fct_reorder(names, n),\n           y = n),\n           fill = viridis::magma(3)[2]) +\n    theme_minimal() +\n    coord_flip() + \n    xlab('Variables') +\n    ylab('Cantidad de observaciones')\n    \n```\n\n### Total de casos para CABA y Buenos Aires por variable `clasificación`\n\n```{r}\n#| out.width: 550\n\n covid_casos_muestra |> \n  filter(carga_provincia_nombre %in% c('CABA', 'Buenos Aires')) |> # este filtro tiene sentido porque considere los casos de residentes en caba y baires que fueron cargados en otras provincias tambien\n  select(-1) |> \n  count(carga_provincia_nombre, clasificacion_resumen) |> \n  ggplot() +\n  geom_col(aes(x = carga_provincia_nombre,\n               y = n,\n               fill = clasificacion_resumen)) +\n  scale_fill_viridis_d(option = \"B\") +\n  theme_minimal() +\n  xlab('carga_provincia_nombre') +\n  ylab('Cantidad de observaciones')\n  \n  \n```\n\n\n\n### Reporte de fecha de enfermedad\n\nCuento la cantidad de NA de las posibles combinaciones en la cantidad de veces que `fecha_inicio_sintomas` y `fecha_diagnostico` para cada observación.\n\n```{r}\n\n\ncase_both_na <- sum(is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico))\n\ncase_sintomas_na <- sum(is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) \n\ncase_diagnostico_na <- sum(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) \n\ncase_both_filled <- sum(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico))\n\n# Creo una tabla\ntable_data <- data.frame(casos = c(\"ambas_columnas_na\", \"fecha_inicio_sintomas_na\", \n                                   \"fecha_diagnostico_na\",\"ambas_columnas_completas\"),\n                         obs = c(case_both_na, case_sintomas_na,\n                                   case_diagnostico_na, case_both_filled)\n) |> \n  mutate(porcentaje = round((100*obs)/nrow(covid_casos_muestra), \n                            digit = 1))\n\n# chequeo que la cantidad de valores reportados en la tabla\n# equivale al total de observaciones\nif(\nsum(table_data$obs) == nrow(covid_casos_muestra)\n  ){\nkable(table_data)\n\n}else(\"La cantidad de valores reportados en la tabla no coincide con el total\")\n\n\n\n```\n\n\n####  CASO 1: fecha de inicio de sintomas y fecha de diagnostico no reportadas\n\nEsto es el `r round((100*table_data[table_data$casos == 'ambas_columnas_na', 'obs'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nLa mayoria de estos casos son `sospechosos` (analizados por laboratorio) o en\nmenor medida `probables` (analizados por autotest). Es posible que sean casos \nque o dieron falsos positivos o que las muestras fueron no aptas para el \nanalisis por algun motivo. \n\n```{r}\n#| fig-cap: 'Fecha de inicio de sintomas y de diagnostico no reportadas. Se observa que la mayoria de los casos sospechosos de la base de datos se encuentran dentro de esta categoria'\n\n\ncovid_casos_muestra |> \n  filter(is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n\n```\n####  CASO 2: fecha de inicio de sintomas reportada y fecha de diagnostico ausente\n\nEsto es el `r round((100*table_data[table_data$casos == 'fecha_inicio_sintomas_na', 'obs'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nLa mayoria de estas observaciones vienen de casos confirmados de COVID-19\nno activos.\n\n```{r}\n#| fig-cap: 'fecha de inicio de sintomas reportada y fecha de diagnostico ausente'\n\n\ncovid_casos_muestra |> \n  filter(is.na(covid_casos_muestra$fecha_inicio_sintomas) & !is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n```\n\n####  CASO 3: fecha de inicio de sintomas ausente y fecha de diagnostico reportada\n\nEsto es el `r round((100*table_data[table_data$casos == 'fecha_inicio_sintomas_na', 'numero_na'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nEn este caso, en su mayoria son los casos que fueron confirmados por criterio clinico-epidemiologico, pero nunca testeados. A su vez existe un numero de casos\nsospechosos elevado, ya sea sin muestra o con muestar sin resultado concluyente.\n\n```{r}\n#| fig-cap: 'fecha de inicio de sintomas ausente y fecha de diagnostico reportada'\n\n\ncovid_casos_muestra |> \n  filter(!is.na(covid_casos_muestra$fecha_inicio_sintomas) & is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n```\n\n\n####  CASO 4: fecha de inicio de sintomas y fecha de diagnostico reportadas\n\nEsto es el `r round((100*table_data[table_data$casos == 'ambas_columnas_completas', 'obs'])/nrow(covid_casos_muestra), digit = 1)` % del total de la base de datos.\n\nEn este caso, en su mayoría son los casos que fueron confirmados por laboratorio.\n\n```{r}\n#| fig-cap: 'Fecha de inicio de sintomas y fecha de diagnostico reportadas.'\n\n\ncovid_casos_muestra |> \n  filter(!is.na(covid_casos_muestra$fecha_inicio_sintomas) &   !is.na(covid_casos_muestra$fecha_diagnostico)) |> \n  select(clasificacion, clasificacion_resumen) |> \n  group_by(clasificacion_resumen, clasificacion) |> \n  summarize(obs = n()) |> \n  arrange(desc(obs)) |> \n  kable()\n\n\n```\n\n### Criterios de descarte de datos \n\n**1. Diferencia entre fecha de inicio sintomas y diagnostico para CASO 4**\n\n\n```{r}\n\ndif_dias_total_casos <- covid_casos_muestra |> \n  dplyr::filter(carga_provincia_nombre %in% c('CABA', 'Buenos Aires')) |> # lo hago por fecha de carga para ver si hay alguna diferencia en la juridiccion\n  mutate(dias_caso = as.numeric(difftime(fecha_diagnostico, # time1\n                                         fecha_inicio_sintomas, # time2\n                                         units=\"days\"))) # logica: time1 - time2\n\ndif_dias <- dif_dias_total_casos |> \n   dplyr::filter(!is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico))  # CASO 4\n\n```\n\nLos casos tienen un rango que va del positivo al negativo\n\n```{r}\nrange(dif_dias$dias_caso)\n```\n\n\n**Que significa que sea negativa esta diferencia?**\n\nCreo que es posible que se diagnostique el caso antes que aparezcan los síntomas.\nVeamos un poco los datos extremos.\n\n```{r}\ndif_dias |> \n  filter(dias_caso > 30 | dias_caso < -30) |> # elegi 30 dias arbitrariamente\n  select(starts_with('fecha_'), dias_caso)\n```\n\nSi grafico, observo que la gran mayoria de los casos cae entre 0 a 10 dias.\n\n```{r}\n\ndif_dias_total_casos <- dif_dias |> \n  filter(dias_caso < 25,\n         dias_caso > -5) \n\nggplotly(\n  dif_dias_total_casos |> \n  group_by(dias_caso, carga_provincia_nombre) |> \n  count() |> \n  ggplot(aes(x = dias_caso,\n             y = n,\n             fill = carga_provincia_nombre\n             )\n        )+\n  geom_col() +\n  scale_fill_viridis_d()+\n  theme_minimal()+\n  xlab('Diferencia entre fecha_diagnostico y fecha_inicio_sintomas') +\n  ylab('Cantidad de observaciones')\n\n)\n\n\n  \n\n```\n\nNo se observa que esta diferencia de dias varie en relación al departamento,\nni para CABA ni para Buenos Aires (datos no mostrados en este reporte).\n\nSe conservaron todos los casos donde la diferencia entre las fechas de síntoma \ny diagnóstico estuvo entre 25 y -5 días, con motivo de eliminar datos \nde dificil interpretación.\n\n### Homogenizacion de las variables `fecha_inicio_sintomas` y `fecha_diagnostico`\n\nPara poder visualizar estos datos en relación a los datos de movilidad ciudadana\nes relevante poder asociar cada observación a una fecha de inicio/diagnóstico \npara cada individuo infectado.\n\nSe crea entonces una nueva variable llamada `fecha_enfermo` en base a las \nsiguientes decisiones por caso resumidas en @tbl-desicion:\n\n\n\n|Caso |    Descripcion                                                 |   `fecha_enfermo`                              |  \n|:--|:-----------------------------------------------------------------|:---------------------------------------|\n| 1 | `fecha_inicio_sintomas` y `fecha_diagnostico` no reportadas      | Remover casos                         |   \n| 2 | `fecha_inicio_sintomas` reportada y `fecha_diagnostico` ausente  | Se considera `fecha_inicio_sintomas`       |\n| 3 | `fecha_inicio_sintomas` ausente y `fecha_diagnostico` reportada  | Se considera `fecha_diagnostico`   |\n| 4 | `fecha_inicio_sintomas` y `fecha_diagnostico` reportadas         | Conservar `fecha_inicio_sintoma`|  \n\n: Desiciones para la creación de la variable `fecha_enfermo` {#tbl-desicion}\n\n\n```{r}\n\n# trabajo sobre la base donde ya elimine las observaciones por diferencia\n# de dias\n\nbase_covid_completa <- dif_dias_total_casos |> \n                          mutate(fecha_enfermo = case_when(\n                             # CASO 1\n                                   is.na(fecha_inicio_sintomas) & is.na(fecha_diagnostico) ~ NA_character_,\n                             # CASO 2\n                                   !is.na(fecha_inicio_sintomas) & is.na(fecha_diagnostico) ~ as.character(fecha_inicio_sintomas),\n                             # CASO 3\n                                   is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico) ~ as.character(fecha_diagnostico),\n                             # CASO 4 \n                                   !is.na(fecha_inicio_sintomas) & !is.na(fecha_diagnostico) ~ as.character(fecha_inicio_sintomas) \n                                  ))\n\n# Remuevo caso 1\nbase_covid_completa <- base_covid_completa |> \n                          drop_na(fecha_enfermo) # remuevo el caso 1\n\n\n```\n\n\n## Datos para usar en geocovid app\n\nComo la cantidad de datos de movilidad que tenemos, llegan hasta diciembre de \n2020, acortamos los datos.\n\nSe guarda este dataset para usar en la app.\n\n```{r}\n\nbase_covid_completa <- base_covid_completa |> \n  dplyr::filter(fecha_enfermo >= \"2020-03-01\" & \n                  \"2020-12-31\" >= fecha_enfermo) |>\n  # realizo cambios en el formato de los nombres para homogenizar datos\n  dplyr::mutate(residencia_departamento_nombre = stringr::str_to_title(residencia_departamento_nombre),\n                residencia_departamento_nombre = stringr::str_remove(residencia_departamento_nombre, \"0(?!$)\")) |> \n  dplyr::select(-fecha_inicio_sintomas, -fecha_diagnostico)\n\nbase_covid_completa\n\nwrite_parquet(base_covid_completa, \"data/procesada/covid_casos_baires_geocovid.parquet\")\n\n```\n\n\n\n**Otras observaciones**\n\n- La cantidad de datos *sin especificar* donde fueron registrados \nes mucho mayor para CABA que para provincia de Buenos Aires.\nLos datos de COVID-19 no deberían expresarse por comuna.\n\n- De los gráficos se observa que esposible que haya una menor cantidad de casos\nreportados durante el fin de semana (datos no mostrados)\n\n- Como veiamos en uno de los primeros graficos, la cantidad de valores en \n`fecha_cui_intensivo` no tiene relacion con la cantidad de fallecidos o \ninternaciones por partido.\n\n```{r}\n\nbase_covid_completa |> \n  group_by(residencia_departamento_nombre) |> \n  summarize(sintomas = sum(!is.na(fecha_enfermo)),\n            internacion = sum(!is.na(fecha_internacion)),\n            cui_intensivo = sum(!is.na(fecha_cui_intensivo)),\n            fallecido = sum(!is.na(fecha_fallecimiento)),) |> \n  arrange(desc(fallecido)) |> \n  kable()\n\n```\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"analisis_datos_covid.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.3.433","theme":"cosmo","title":"Análisis de datos de COVID-19"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}
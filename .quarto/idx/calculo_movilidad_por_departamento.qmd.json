{"title":"Cálculo de movilidad por departamento de la provincia","markdown":{"yaml":{"title":"Cálculo de movilidad por departamento de la provincia"},"headingText":"1. Guardo información de los rasters en un dataset","containsRefs":false,"markdown":"\n\n---\n\n**Datos iniciales:**\nImagenes rasters de la movilidad ciudadana para cada locación y momento del día reportado tanto para cambio porcentual semanal como prepandemia.\n\n**Se busca obtener:**\nUn dataset con los valores de movilidad promediados por departamento de prov.\nde Buenos Aires tanto para cambio porcentual semanal como prepandemia, en \ncada locación y momento en el que haya disponible una imagen raster.\n\n---\n\n\n```{r setup, echo=FALSE}\n\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(plotly)\nlibrary(forcats)\n\n```\n\n\nLeo todos las rasters generados y guardo los nombres de los archivos:\n\n```{r}\n\n# Lista archivos en la carpeta\nall_files <- list.files(\"data/inicial/\")\n\n# Filtra todos los archivos que terminan con '.tif'\nbase_raster <- all_files[grep(\".tif$\",\n                              basename(all_files))]  |>\n  tibble::as_tibble() |>\n  tidyr::separate(value,\n                  into = c('locacion',\n                           'tipo_de_raster',\n                           'fecha',\n                           'hora'),\n                  sep = '_',\n                  remove = FALSE) |>\n  dplyr::mutate(fecha = as.Date(fecha),\n                hora = as.numeric(str_sub(hora,\n                                          end = -4))) |>\n  # genero categorias\n  dplyr::mutate(momento = dplyr::case_when(hora == 0 ~ \"noche\",\n                                           hora == 8 ~ \"mañana\",\n                                           hora == 16 ~ \"tarde\"))\n\nbase_raster\n```\n\n## 2. Extraigo los valores promedio por departamento\nEsto lo realizamos tanto para los rasters de 0 am (noche), 8 am (mañana) y\ntarde (4 pm).\n\nLas variables mañana y tarde se combinan en `px_mean_dianoche`:\n\n```{r}\n\n# Mapa vectorial de prov de Buenos Aires\nbsas <-  sf::st_read(\"data/procesada/bsas_caba_simple.gpkg\")\n\n\n# Incluyo la informacion de los poligonos con la de los rasters\nbase_raster <- base_raster |>\n  filter(locacion == 'baires') |> # en caso que tenga mas de una locacion \n  cross_join(bsas) |>\n  mutate(file = paste0('data/inicial/', value)) |> \n  st_as_sf()\n\n\npx_baires <- c()\n\nfor(i in 1:nrow(base_raster)){\n\n# lee el raster\nraster <- terra::rast(base_raster$file[i]) \n# lee el poligono\npoli <- sf::st_as_sf(base_raster[i, c('partido',\n                                      'geom')])  |> \n  st_transform(3857)\n\n# obtener el promedio de ese poligono (departamento)\nint_data <- terra::extract(raster,\n                            poli,\n                            function(x) mean(x, \n                                             na.rm = TRUE))\n\n\npx_data <- data.frame(base_raster[i,],\n                      'px_mean' = int_data[[2]])\n\npx_baires <- rbind(px_data, px_baires)\n}\n\npx_baires_w <- px_baires |>\n               select(fecha, locacion, tipo_de_raster,\n                      momento, hora, partido, px_mean, geom) |>\n               pivot_wider(\n                      names_from = c(momento, hora),\n                      names_sep = \"_\",\n                      values_from = px_mean) |>\n               # combino los valores de mañana y tarde\n               mutate(px_mean_dianoche = ((mañana_8 + tarde_16) /2))\n\npx_baires_w\n```\n## 3. Aplico categorias para visualizar los datos\n\nEn este ejemplo estoy preparando los datos para graficar el dia 2020-05-06 para \nla variable `percent_change` promediando los valores de 8 am y 4 pm.\n\nGenero categorias `criterio` y `criterio_noche` con la finalidad de graficar\nlos datos.\n\n```{r}\n\ndia_px_baires <- px_baires_w |> \n                       filter(fecha == '2020-05-06',\n                       tipo_de_raster == 'pc')\n\ndia_px_baires <- dia_px_baires |>\n         mutate(criterio = case_when(px_mean_dianoche > 40 ~ \"mas de 40\",\n                                     40 > px_mean_dianoche & \n                                       px_mean_dianoche > 30 ~ \"40 - 30\",\n                                     30 > px_mean_dianoche &\n                                       px_mean_dianoche > 20 ~ \"30 - 20\",\n                                     20 > px_mean_dianoche & \n                                       px_mean_dianoche > 10 ~ \"20 - 10\",\n                                     10 > px_mean_dianoche & \n                                       px_mean_dianoche > 1 ~ \"10 - 1\",\n                                     1 > px_mean_dianoche & \n                                       px_mean_dianoche> -1 ~ \"sin cambios\",\n                                     -1 > px_mean_dianoche & \n                                       px_mean_dianoche > -10 ~ \"-1 - -10\",\n                                     -10 > px_mean_dianoche&\n                                       px_mean_dianoche > -20 ~ \"-10 - -20\",\n                                     -20 > px_mean_dianoche &\n                                       px_mean_dianoche > -30 ~ \"-20 - -30\",\n                                     -30 > px_mean_dianoche & \n                                       px_mean_dianoche > -40 ~ \"-30 - -40\",\n                                     -40 > px_mean_dianoche  ~ \"menor a -40\"),\n                criterio_noche = case_when(noche_0 > 40 ~ \"mas de 40\",\n                                     40 > noche_0 &\n                                       noche_0 > 30 ~ \"40 - 30\",\n                                     30 > noche_0 &\n                                       noche_0 > 20 ~ \"30 - 20\",\n                                     20 > noche_0 & \n                                       noche_0 > 10 ~ \"20 - 10\",\n                                     10 > noche_0 & \n                                       noche_0 > 1 ~ \"10 - 1\",\n                                     1 > noche_0 & \n                                       noche_0 > -1 ~ \"sin cambios\",\n                                     -1 > noche_0 & \n                                       noche_0 > -10 ~ \"-1 - -10\",\n                                     -10 > noche_0 &\n                                       noche_0 > -20 ~ \"-10 - -20\",\n                                     -20 > noche_0 & \n                                       noche_0 > -30 ~ \"-20 - -30\",\n                                     -30 > noche_0 & \n                                       noche_0 > -40 ~ \"-30 - -40\",\n                                     -40 > noche_0  ~ \"menor a -40\")) |>\n         mutate(criterio = fct_relevel(criterio, c(\"mas de 40\",\n                                                   \"40 - 30\",\n                                                   \"30 - 20\",\n                                                   \"20 - 10\",\n                                                   \"10 - 1\",\n                                                   \"sin cambios\",\n                                                   \"-1 - -10\", \n                                                   \"-10 - -20\",\n                                                   \"-20 - -30\", \n                                                   \"-30 - -40\",\n                                                   \"menor a -40\")),\n                criterio_noche = fct_relevel(criterio_noche, c(\"mas de 40\",\n                                                               \"40 - 30\",\n                                                   \"30 - 20\",\n                                                   \"20 - 10\",\n                                                   \"10 - 1\",\n                                                   \"sin cambios\",\n                                                   \"-1 - -10\", \n                                                   \"-10 - -20\",\n                                                   \"-20 - -30\", \n                                                   \"-30 - -40\",\n                                                   \"menor a -40\"))) |>\n  st_as_sf()\n\n\ndia_px_baires \n\n# st_write(dia_px_baires, \"data/procesada/promedio_pixeles_baires.gpkg\")\n\n```\n## 4. Grafico en el mapa de provincia de Buenos Aires\n\n```{r}\n\n\n\n  colors <- c(\"mas de 40\"=\"#67001F\",\n              \"40 - 30\"=\"#B2182B\",\n              \"30 - 20\"=\"#D6604D\",\n              \"20 - 10\"=\"#F4A582\",\n              \"10 - 1\"=\"#FDDBC7\",\n              \"sin cambios\"=\"#F7F7F7\",\n              \"-1 - -10\" =\"#D1E5F0\",\n              \"-10 - -20\"=\"#92C5DE\",\n              \"-20 - -30\"=\"#4393C3\",\n              \"-30 - -40\"=\"#2166AC\",\n              \"menor a -40\"=\"#053061\")\n\n\nm <- list(\n  l = 0,\n  r = 0,\n  b = 0,\n  t = 0\n)\n\n# usando plotly\n p <-\n   plotly::plot_ly() |>\n   add_sf(\n     stroke = I(\"#95B2C6\"),\n     data = dia_px_baires,\n     name = ~criterio,\n     split = ~criterio,\n     color = ~criterio,\n     colors = colors,\n     stroke = I(\"transparent\"),\n     hoveron = \"fills\",\n     hoverinfo = 'name',\n     legendgroup = 'criterio',\n     legendgrouptitle = list(text = 'Promedio % de cambio',\n                             font = list(size = 15,\n                                         family = \"Work Sans\",\n                                         color = \"black\"))\n   )|>\n   plotly::layout(margin = m,\n                  showlegend = TRUE,\n                  legend = list(font = list(size = 15,\n                                            family = \"Work Sans\",\n                                            color = \"black\"),\n                                itemsizing  = 'trace',\n                                groupclick = 'toggleitem', # permite que cada trace se seleccione individualmente\n                                xref = 'paper',\n                                yref = 'paper',\n                                x = 1,\n                                y = 0)) \n p\n```\n\n","srcMarkdownNoYaml":"\n\n---\n\n**Datos iniciales:**\nImagenes rasters de la movilidad ciudadana para cada locación y momento del día reportado tanto para cambio porcentual semanal como prepandemia.\n\n**Se busca obtener:**\nUn dataset con los valores de movilidad promediados por departamento de prov.\nde Buenos Aires tanto para cambio porcentual semanal como prepandemia, en \ncada locación y momento en el que haya disponible una imagen raster.\n\n---\n\n\n```{r setup, echo=FALSE}\n\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(plotly)\nlibrary(forcats)\n\n```\n\n## 1. Guardo información de los rasters en un dataset\n\nLeo todos las rasters generados y guardo los nombres de los archivos:\n\n```{r}\n\n# Lista archivos en la carpeta\nall_files <- list.files(\"data/inicial/\")\n\n# Filtra todos los archivos que terminan con '.tif'\nbase_raster <- all_files[grep(\".tif$\",\n                              basename(all_files))]  |>\n  tibble::as_tibble() |>\n  tidyr::separate(value,\n                  into = c('locacion',\n                           'tipo_de_raster',\n                           'fecha',\n                           'hora'),\n                  sep = '_',\n                  remove = FALSE) |>\n  dplyr::mutate(fecha = as.Date(fecha),\n                hora = as.numeric(str_sub(hora,\n                                          end = -4))) |>\n  # genero categorias\n  dplyr::mutate(momento = dplyr::case_when(hora == 0 ~ \"noche\",\n                                           hora == 8 ~ \"mañana\",\n                                           hora == 16 ~ \"tarde\"))\n\nbase_raster\n```\n\n## 2. Extraigo los valores promedio por departamento\nEsto lo realizamos tanto para los rasters de 0 am (noche), 8 am (mañana) y\ntarde (4 pm).\n\nLas variables mañana y tarde se combinan en `px_mean_dianoche`:\n\n```{r}\n\n# Mapa vectorial de prov de Buenos Aires\nbsas <-  sf::st_read(\"data/procesada/bsas_caba_simple.gpkg\")\n\n\n# Incluyo la informacion de los poligonos con la de los rasters\nbase_raster <- base_raster |>\n  filter(locacion == 'baires') |> # en caso que tenga mas de una locacion \n  cross_join(bsas) |>\n  mutate(file = paste0('data/inicial/', value)) |> \n  st_as_sf()\n\n\npx_baires <- c()\n\nfor(i in 1:nrow(base_raster)){\n\n# lee el raster\nraster <- terra::rast(base_raster$file[i]) \n# lee el poligono\npoli <- sf::st_as_sf(base_raster[i, c('partido',\n                                      'geom')])  |> \n  st_transform(3857)\n\n# obtener el promedio de ese poligono (departamento)\nint_data <- terra::extract(raster,\n                            poli,\n                            function(x) mean(x, \n                                             na.rm = TRUE))\n\n\npx_data <- data.frame(base_raster[i,],\n                      'px_mean' = int_data[[2]])\n\npx_baires <- rbind(px_data, px_baires)\n}\n\npx_baires_w <- px_baires |>\n               select(fecha, locacion, tipo_de_raster,\n                      momento, hora, partido, px_mean, geom) |>\n               pivot_wider(\n                      names_from = c(momento, hora),\n                      names_sep = \"_\",\n                      values_from = px_mean) |>\n               # combino los valores de mañana y tarde\n               mutate(px_mean_dianoche = ((mañana_8 + tarde_16) /2))\n\npx_baires_w\n```\n## 3. Aplico categorias para visualizar los datos\n\nEn este ejemplo estoy preparando los datos para graficar el dia 2020-05-06 para \nla variable `percent_change` promediando los valores de 8 am y 4 pm.\n\nGenero categorias `criterio` y `criterio_noche` con la finalidad de graficar\nlos datos.\n\n```{r}\n\ndia_px_baires <- px_baires_w |> \n                       filter(fecha == '2020-05-06',\n                       tipo_de_raster == 'pc')\n\ndia_px_baires <- dia_px_baires |>\n         mutate(criterio = case_when(px_mean_dianoche > 40 ~ \"mas de 40\",\n                                     40 > px_mean_dianoche & \n                                       px_mean_dianoche > 30 ~ \"40 - 30\",\n                                     30 > px_mean_dianoche &\n                                       px_mean_dianoche > 20 ~ \"30 - 20\",\n                                     20 > px_mean_dianoche & \n                                       px_mean_dianoche > 10 ~ \"20 - 10\",\n                                     10 > px_mean_dianoche & \n                                       px_mean_dianoche > 1 ~ \"10 - 1\",\n                                     1 > px_mean_dianoche & \n                                       px_mean_dianoche> -1 ~ \"sin cambios\",\n                                     -1 > px_mean_dianoche & \n                                       px_mean_dianoche > -10 ~ \"-1 - -10\",\n                                     -10 > px_mean_dianoche&\n                                       px_mean_dianoche > -20 ~ \"-10 - -20\",\n                                     -20 > px_mean_dianoche &\n                                       px_mean_dianoche > -30 ~ \"-20 - -30\",\n                                     -30 > px_mean_dianoche & \n                                       px_mean_dianoche > -40 ~ \"-30 - -40\",\n                                     -40 > px_mean_dianoche  ~ \"menor a -40\"),\n                criterio_noche = case_when(noche_0 > 40 ~ \"mas de 40\",\n                                     40 > noche_0 &\n                                       noche_0 > 30 ~ \"40 - 30\",\n                                     30 > noche_0 &\n                                       noche_0 > 20 ~ \"30 - 20\",\n                                     20 > noche_0 & \n                                       noche_0 > 10 ~ \"20 - 10\",\n                                     10 > noche_0 & \n                                       noche_0 > 1 ~ \"10 - 1\",\n                                     1 > noche_0 & \n                                       noche_0 > -1 ~ \"sin cambios\",\n                                     -1 > noche_0 & \n                                       noche_0 > -10 ~ \"-1 - -10\",\n                                     -10 > noche_0 &\n                                       noche_0 > -20 ~ \"-10 - -20\",\n                                     -20 > noche_0 & \n                                       noche_0 > -30 ~ \"-20 - -30\",\n                                     -30 > noche_0 & \n                                       noche_0 > -40 ~ \"-30 - -40\",\n                                     -40 > noche_0  ~ \"menor a -40\")) |>\n         mutate(criterio = fct_relevel(criterio, c(\"mas de 40\",\n                                                   \"40 - 30\",\n                                                   \"30 - 20\",\n                                                   \"20 - 10\",\n                                                   \"10 - 1\",\n                                                   \"sin cambios\",\n                                                   \"-1 - -10\", \n                                                   \"-10 - -20\",\n                                                   \"-20 - -30\", \n                                                   \"-30 - -40\",\n                                                   \"menor a -40\")),\n                criterio_noche = fct_relevel(criterio_noche, c(\"mas de 40\",\n                                                               \"40 - 30\",\n                                                   \"30 - 20\",\n                                                   \"20 - 10\",\n                                                   \"10 - 1\",\n                                                   \"sin cambios\",\n                                                   \"-1 - -10\", \n                                                   \"-10 - -20\",\n                                                   \"-20 - -30\", \n                                                   \"-30 - -40\",\n                                                   \"menor a -40\"))) |>\n  st_as_sf()\n\n\ndia_px_baires \n\n# st_write(dia_px_baires, \"data/procesada/promedio_pixeles_baires.gpkg\")\n\n```\n## 4. Grafico en el mapa de provincia de Buenos Aires\n\n```{r}\n\n\n\n  colors <- c(\"mas de 40\"=\"#67001F\",\n              \"40 - 30\"=\"#B2182B\",\n              \"30 - 20\"=\"#D6604D\",\n              \"20 - 10\"=\"#F4A582\",\n              \"10 - 1\"=\"#FDDBC7\",\n              \"sin cambios\"=\"#F7F7F7\",\n              \"-1 - -10\" =\"#D1E5F0\",\n              \"-10 - -20\"=\"#92C5DE\",\n              \"-20 - -30\"=\"#4393C3\",\n              \"-30 - -40\"=\"#2166AC\",\n              \"menor a -40\"=\"#053061\")\n\n\nm <- list(\n  l = 0,\n  r = 0,\n  b = 0,\n  t = 0\n)\n\n# usando plotly\n p <-\n   plotly::plot_ly() |>\n   add_sf(\n     stroke = I(\"#95B2C6\"),\n     data = dia_px_baires,\n     name = ~criterio,\n     split = ~criterio,\n     color = ~criterio,\n     colors = colors,\n     stroke = I(\"transparent\"),\n     hoveron = \"fills\",\n     hoverinfo = 'name',\n     legendgroup = 'criterio',\n     legendgrouptitle = list(text = 'Promedio % de cambio',\n                             font = list(size = 15,\n                                         family = \"Work Sans\",\n                                         color = \"black\"))\n   )|>\n   plotly::layout(margin = m,\n                  showlegend = TRUE,\n                  legend = list(font = list(size = 15,\n                                            family = \"Work Sans\",\n                                            color = \"black\"),\n                                itemsizing  = 'trace',\n                                groupclick = 'toggleitem', # permite que cada trace se seleccione individualmente\n                                xref = 'paper',\n                                yref = 'paper',\n                                x = 1,\n                                y = 0)) \n p\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"calculo_movilidad_por_departamento.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":"cosmo","title":"Cálculo de movilidad por departamento de la provincia"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}